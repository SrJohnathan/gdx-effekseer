/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class DynamicFactorParameter {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DynamicFactorParameter(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DynamicFactorParameter obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GDXJNI.delete_DynamicFactorParameter(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setTra(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_Tra_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getTra() {
    long cPtr = GDXJNI.DynamicFactorParameter_Tra_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public void setTraInv(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_TraInv_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getTraInv() {
    long cPtr = GDXJNI.DynamicFactorParameter_TraInv_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public void setRot(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_Rot_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getRot() {
    long cPtr = GDXJNI.DynamicFactorParameter_Rot_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public void setRotInv(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_RotInv_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getRotInv() {
    long cPtr = GDXJNI.DynamicFactorParameter_RotInv_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public void setScale(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_Scale_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getScale() {
    long cPtr = GDXJNI.DynamicFactorParameter_Scale_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public void setScaleInv(FloatArray3 value) {
    GDXJNI.DynamicFactorParameter_ScaleInv_set(swigCPtr, this, FloatArray3.getCPtr(value), value);
  }

  public FloatArray3 getScaleInv() {
    long cPtr = GDXJNI.DynamicFactorParameter_ScaleInv_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray3(cPtr, false);
  }

  public DynamicFactorParameter() {
    this(GDXJNI.new_DynamicFactorParameter(), true);
  }

}
