/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public final class ParameterRotationType {
  public final static ParameterRotationType ParameterRotationType_Fixed = new ParameterRotationType("ParameterRotationType_Fixed", GDXJNI.ParameterRotationType_Fixed_get());
  public final static ParameterRotationType ParameterRotationType_PVA = new ParameterRotationType("ParameterRotationType_PVA", GDXJNI.ParameterRotationType_PVA_get());
  public final static ParameterRotationType ParameterRotationType_Easing = new ParameterRotationType("ParameterRotationType_Easing", GDXJNI.ParameterRotationType_Easing_get());
  public final static ParameterRotationType ParameterRotationType_AxisPVA = new ParameterRotationType("ParameterRotationType_AxisPVA", GDXJNI.ParameterRotationType_AxisPVA_get());
  public final static ParameterRotationType ParameterRotationType_AxisEasing = new ParameterRotationType("ParameterRotationType_AxisEasing", GDXJNI.ParameterRotationType_AxisEasing_get());
  public final static ParameterRotationType ParameterRotationType_FCurve = new ParameterRotationType("ParameterRotationType_FCurve", GDXJNI.ParameterRotationType_FCurve_get());
  public final static ParameterRotationType ParameterRotationType_None = new ParameterRotationType("ParameterRotationType_None", GDXJNI.ParameterRotationType_None_get());
  public final static ParameterRotationType ParameterRotationType_DWORD = new ParameterRotationType("ParameterRotationType_DWORD", GDXJNI.ParameterRotationType_DWORD_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ParameterRotationType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ParameterRotationType.class + " with value " + swigValue);
  }

  private ParameterRotationType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ParameterRotationType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ParameterRotationType(String swigName, ParameterRotationType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ParameterRotationType[] swigValues = { ParameterRotationType_Fixed, ParameterRotationType_PVA, ParameterRotationType_Easing, ParameterRotationType_AxisPVA, ParameterRotationType_AxisEasing, ParameterRotationType_FCurve, ParameterRotationType_None, ParameterRotationType_DWORD };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

