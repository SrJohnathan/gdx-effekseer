/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class ParameterCustomData {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ParameterCustomData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParameterCustomData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GDXJNI.delete_ParameterCustomData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(ParameterCustomDataType value) {
    GDXJNI.ParameterCustomData_Type_set(swigCPtr, this, value.swigValue());
  }

  public ParameterCustomDataType getType() {
    return ParameterCustomDataType.swigToEnum(GDXJNI.ParameterCustomData_Type_get(swigCPtr, this));
  }

  public void setFixed(ParameterCustomDataFixed value) {
    GDXJNI.ParameterCustomData_Fixed_set(swigCPtr, this, ParameterCustomDataFixed.getCPtr(value), value);
  }

  public ParameterCustomDataFixed getFixed() {
    long cPtr = GDXJNI.ParameterCustomData_Fixed_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ParameterCustomDataFixed(cPtr, false);
  }

  public void setRandom(ParameterCustomDataRandom value) {
    GDXJNI.ParameterCustomData_Random_set(swigCPtr, this, ParameterCustomDataRandom.getCPtr(value), value);
  }

  public ParameterCustomDataRandom getRandom() {
    long cPtr = GDXJNI.ParameterCustomData_Random_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ParameterCustomDataRandom(cPtr, false);
  }

  public void setEasing(ParameterCustomDataEasing value) {
    GDXJNI.ParameterCustomData_Easing_set(swigCPtr, this, ParameterCustomDataEasing.getCPtr(value), value);
  }

  public ParameterCustomDataEasing getEasing() {
    long cPtr = GDXJNI.ParameterCustomData_Easing_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ParameterCustomDataEasing(cPtr, false);
  }

  public void setFCurve(ParameterCustomDataFCurve value) {
    GDXJNI.ParameterCustomData_FCurve_set(swigCPtr, this, ParameterCustomDataFCurve.getCPtr(value), value);
  }

  public ParameterCustomDataFCurve getFCurve() {
    long cPtr = GDXJNI.ParameterCustomData_FCurve_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ParameterCustomDataFCurve(cPtr, false);
  }

  public void setFixed4D(FloatArray4 value) {
    GDXJNI.ParameterCustomData_Fixed4D_set(swigCPtr, this, FloatArray4.getCPtr(value), value);
  }

  public FloatArray4 getFixed4D() {
    long cPtr = GDXJNI.ParameterCustomData_Fixed4D_get(swigCPtr, this);
    return (cPtr == 0) ? null : new FloatArray4(cPtr, false);
  }

  public void setFCurveColor(ParameterCustomDataFCurveColor value) {
    GDXJNI.ParameterCustomData_FCurveColor_set(swigCPtr, this, ParameterCustomDataFCurveColor.getCPtr(value), value);
  }

  public ParameterCustomDataFCurveColor getFCurveColor() {
    long cPtr = GDXJNI.ParameterCustomData_FCurveColor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ParameterCustomDataFCurveColor(cPtr, false);
  }

  public ParameterCustomData() {
    this(GDXJNI.new_ParameterCustomData(), true);
  }

}
