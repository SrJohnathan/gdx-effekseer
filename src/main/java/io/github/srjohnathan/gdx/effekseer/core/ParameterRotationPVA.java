/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class ParameterRotationPVA {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ParameterRotationPVA(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParameterRotationPVA obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GDXJNI.delete_ParameterRotationPVA(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setRefEqP(RefMinMax value) {
    GDXJNI.ParameterRotationPVA_RefEqP_set(swigCPtr, this, RefMinMax.getCPtr(value), value);
  }

  public RefMinMax getRefEqP() {
    long cPtr = GDXJNI.ParameterRotationPVA_RefEqP_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RefMinMax(cPtr, false);
  }

  public void setRefEqV(RefMinMax value) {
    GDXJNI.ParameterRotationPVA_RefEqV_set(swigCPtr, this, RefMinMax.getCPtr(value), value);
  }

  public RefMinMax getRefEqV() {
    long cPtr = GDXJNI.ParameterRotationPVA_RefEqV_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RefMinMax(cPtr, false);
  }

  public void setRefEqA(RefMinMax value) {
    GDXJNI.ParameterRotationPVA_RefEqA_set(swigCPtr, this, RefMinMax.getCPtr(value), value);
  }

  public RefMinMax getRefEqA() {
    long cPtr = GDXJNI.ParameterRotationPVA_RefEqA_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RefMinMax(cPtr, false);
  }

  public void setRotation(InternalStructRandomVector3D value) {
    GDXJNI.ParameterRotationPVA_rotation_set(swigCPtr, this, InternalStructRandomVector3D.getCPtr(value), value);
  }

  public InternalStructRandomVector3D getRotation() {
    long cPtr = GDXJNI.ParameterRotationPVA_rotation_get(swigCPtr, this);
    return (cPtr == 0) ? null : new InternalStructRandomVector3D(cPtr, false);
  }

  public void setVelocity(InternalStructRandomVector3D value) {
    GDXJNI.ParameterRotationPVA_velocity_set(swigCPtr, this, InternalStructRandomVector3D.getCPtr(value), value);
  }

  public InternalStructRandomVector3D getVelocity() {
    long cPtr = GDXJNI.ParameterRotationPVA_velocity_get(swigCPtr, this);
    return (cPtr == 0) ? null : new InternalStructRandomVector3D(cPtr, false);
  }

  public void setAcceleration(InternalStructRandomVector3D value) {
    GDXJNI.ParameterRotationPVA_acceleration_set(swigCPtr, this, InternalStructRandomVector3D.getCPtr(value), value);
  }

  public InternalStructRandomVector3D getAcceleration() {
    long cPtr = GDXJNI.ParameterRotationPVA_acceleration_get(swigCPtr, this);
    return (cPtr == 0) ? null : new InternalStructRandomVector3D(cPtr, false);
  }

  public ParameterRotationPVA() {
    this(GDXJNI.new_ParameterRotationPVA(), true);
  }

}
