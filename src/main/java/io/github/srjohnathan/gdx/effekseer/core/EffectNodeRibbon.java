/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class EffectNodeRibbon extends EffectNodeImplemented {
  private transient long swigCPtr;

  protected EffectNodeRibbon(long cPtr, boolean cMemoryOwn) {
    super(GDXJNI.EffectNodeRibbon_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EffectNodeRibbon obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GDXJNI.delete_EffectNodeRibbon(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setM_nodeParameter(SWIGTYPE_p_Effekseer__RibbonRenderer__NodeParameter value) {
    GDXJNI.EffectNodeRibbon_m_nodeParameter_set(swigCPtr, this, SWIGTYPE_p_Effekseer__RibbonRenderer__NodeParameter.getCPtr(value));
  }

  public SWIGTYPE_p_Effekseer__RibbonRenderer__NodeParameter getM_nodeParameter() {
    long cPtr = GDXJNI.EffectNodeRibbon_m_nodeParameter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Effekseer__RibbonRenderer__NodeParameter(cPtr, false);
  }

  public void setM_instanceParameter(SWIGTYPE_p_Effekseer__RibbonRenderer__InstanceParameter value) {
    GDXJNI.EffectNodeRibbon_m_instanceParameter_set(swigCPtr, this, SWIGTYPE_p_Effekseer__RibbonRenderer__InstanceParameter.getCPtr(value));
  }

  public SWIGTYPE_p_Effekseer__RibbonRenderer__InstanceParameter getM_instanceParameter() {
    long cPtr = GDXJNI.EffectNodeRibbon_m_instanceParameter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_Effekseer__RibbonRenderer__InstanceParameter(cPtr, false);
  }

  public void setAlphaBlend(AlphaBlendType value) {
    GDXJNI.EffectNodeRibbon_AlphaBlend_set(swigCPtr, this, value.swigValue());
  }

  public AlphaBlendType getAlphaBlend() {
    return AlphaBlendType.swigToEnum(GDXJNI.EffectNodeRibbon_AlphaBlend_get(swigCPtr, this));
  }

  public void setViewpointDependent(int value) {
    GDXJNI.EffectNodeRibbon_ViewpointDependent_set(swigCPtr, this, value);
  }

  public int getViewpointDependent() {
    return GDXJNI.EffectNodeRibbon_ViewpointDependent_get(swigCPtr, this);
  }

  public void setRibbonAllColor(RibbonAllColorParameterCore value) {
    GDXJNI.EffectNodeRibbon_RibbonAllColor_set(swigCPtr, this, RibbonAllColorParameterCore.getCPtr(value), value);
  }

  public RibbonAllColorParameterCore getRibbonAllColor() {
    long cPtr = GDXJNI.EffectNodeRibbon_RibbonAllColor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RibbonAllColorParameterCore(cPtr, false);
  }

  public void setRibbonColor(RibbonColorParameterCore value) {
    GDXJNI.EffectNodeRibbon_RibbonColor_set(swigCPtr, this, RibbonColorParameterCore.getCPtr(value), value);
  }

  public RibbonColorParameterCore getRibbonColor() {
    long cPtr = GDXJNI.EffectNodeRibbon_RibbonColor_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RibbonColorParameterCore(cPtr, false);
  }

  public void setRibbonPosition(RibbonPositionParameterCore value) {
    GDXJNI.EffectNodeRibbon_RibbonPosition_set(swigCPtr, this, RibbonPositionParameterCore.getCPtr(value), value);
  }

  public RibbonPositionParameterCore getRibbonPosition() {
    long cPtr = GDXJNI.EffectNodeRibbon_RibbonPosition_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RibbonPositionParameterCore(cPtr, false);
  }

  public void setRibbonTexture(int value) {
    GDXJNI.EffectNodeRibbon_RibbonTexture_set(swigCPtr, this, value);
  }

  public int getRibbonTexture() {
    return GDXJNI.EffectNodeRibbon_RibbonTexture_get(swigCPtr, this);
  }

  public void setSplineDivision(int value) {
    GDXJNI.EffectNodeRibbon_SplineDivision_set(swigCPtr, this, value);
  }

  public int getSplineDivision() {
    return GDXJNI.EffectNodeRibbon_SplineDivision_get(swigCPtr, this);
  }

  public void setTextureUVType(NodeRendererTextureUVTypeParameter value) {
    GDXJNI.EffectNodeRibbon_TextureUVType_set(swigCPtr, this, NodeRendererTextureUVTypeParameter.getCPtr(value), value);
  }

  public NodeRendererTextureUVTypeParameter getTextureUVType() {
    long cPtr = GDXJNI.EffectNodeRibbon_TextureUVType_get(swigCPtr, this);
    return (cPtr == 0) ? null : new NodeRendererTextureUVTypeParameter(cPtr, false);
  }

  public EffectNodeRibbon(EffekseerEffect effect, SWIGTYPE_p_p_unsigned_char pos) {
    this(GDXJNI.new_EffectNodeRibbon(EffekseerEffect.getCPtr(effect), effect, SWIGTYPE_p_p_unsigned_char.getCPtr(pos)), true);
  }

}
