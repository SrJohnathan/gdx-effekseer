/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class GDXJNI {
  public final static native long new_VectorFloat__SWIG_0();
  public final static native long new_VectorFloat__SWIG_1(long jarg1, VectorFloat jarg1_);
  public final static native long VectorFloat_capacity(long jarg1, VectorFloat jarg1_);
  public final static native void VectorFloat_reserve(long jarg1, VectorFloat jarg1_, long jarg2);
  public final static native boolean VectorFloat_isEmpty(long jarg1, VectorFloat jarg1_);
  public final static native void VectorFloat_clear(long jarg1, VectorFloat jarg1_);
  public final static native long new_VectorFloat__SWIG_2(int jarg1, float jarg2);
  public final static native int VectorFloat_doSize(long jarg1, VectorFloat jarg1_);
  public final static native void VectorFloat_doAdd__SWIG_0(long jarg1, VectorFloat jarg1_, float jarg2);
  public final static native void VectorFloat_doAdd__SWIG_1(long jarg1, VectorFloat jarg1_, int jarg2, float jarg3);
  public final static native float VectorFloat_doRemove(long jarg1, VectorFloat jarg1_, int jarg2);
  public final static native float VectorFloat_doGet(long jarg1, VectorFloat jarg1_, int jarg2);
  public final static native float VectorFloat_doSet(long jarg1, VectorFloat jarg1_, int jarg2, float jarg3);
  public final static native void VectorFloat_doRemoveRange(long jarg1, VectorFloat jarg1_, int jarg2, int jarg3);
  public final static native void delete_VectorFloat(long jarg1);
  public final static native long new_EffekseerBackendCore();
  public final static native void delete_EffekseerBackendCore(long jarg1);
  public final static native boolean EffekseerBackendCore_InitializeAsOpenGL();
  public final static native void EffekseerBackendCore_Terminate();
  public final static native long new_EffekseerEffectCore();
  public final static native void delete_EffekseerEffectCore(long jarg1);
  public final static native String EffekseerEffectCore_GetName(long jarg1, EffekseerEffectCore jarg1_);
  public final static native void EffekseerEffectCore_SetName(long jarg1, EffekseerEffectCore jarg1_, String jarg2);
  public final static native int EffekseerEffectCore_GetVersion(long jarg1, EffekseerEffectCore jarg1_);
  public final static native boolean EffekseerEffectCore_load(long jarg1, EffekseerEffectCore jarg1_, long jarg2, EffekseerManagerCore jarg2_, byte[] jarg3, int jarg4, float jarg5);
  public final static native int EffekseerEffectCore_GetTextureCount(long jarg1, EffekseerEffectCore jarg1_, int jarg2);
  public final static native String EffekseerEffectCore_GetTexturePath(long jarg1, EffekseerEffectCore jarg1_, int jarg2, int jarg3);
  public final static native boolean EffekseerEffectCore_LoadTexture(long jarg1, EffekseerEffectCore jarg1_, byte[] jarg2, int jarg3, int jarg4, int jarg5);
  public final static native boolean EffekseerEffectCore_HasTextureLoaded(long jarg1, EffekseerEffectCore jarg1_, int jarg2, int jarg3);
  public final static native int EffekseerEffectCore_GetModelCount(long jarg1, EffekseerEffectCore jarg1_);
  public final static native String EffekseerEffectCore_GetModelPath(long jarg1, EffekseerEffectCore jarg1_, int jarg2);
  public final static native boolean EffekseerEffectCore_LoadModel(long jarg1, EffekseerEffectCore jarg1_, byte[] jarg2, int jarg3, int jarg4);
  public final static native boolean EffekseerEffectCore_HasModelLoaded(long jarg1, EffekseerEffectCore jarg1_, int jarg2);
  public final static native int EffekseerEffectCore_GetMaterialCount(long jarg1, EffekseerEffectCore jarg1_);
  public final static native String EffekseerEffectCore_GetMaterialPath(long jarg1, EffekseerEffectCore jarg1_, int jarg2);
  public final static native boolean EffekseerEffectCore_LoadMaterial(long jarg1, EffekseerEffectCore jarg1_, byte[] jarg2, int jarg3, int jarg4);
  public final static native boolean EffekseerEffectCore_HasMaterialLoaded(long jarg1, EffekseerEffectCore jarg1_, int jarg2);
  public final static native int EffekseerEffectCore_NodeCount(long jarg1, EffekseerEffectCore jarg1_);
  public final static native long EffekseerEffectCore_GetRootNode(long jarg1, EffekseerEffectCore jarg1_);
  public final static native long new_EffekseerManagerCore();
  public final static native void delete_EffekseerManagerCore(long jarg1);
  public final static native boolean EffekseerManagerCore_Initialize(long jarg1, EffekseerManagerCore jarg1_, int jarg2, int jarg3, boolean jarg4);
  public final static native void EffekseerManagerCore_LaunchWorkerThreads(long jarg1, EffekseerManagerCore jarg1_, long jarg2);
  public final static native boolean EffekseerManagerCore_Exists(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native int EffekseerManagerCore_Play(long jarg1, EffekseerManagerCore jarg1_, long jarg2, EffekseerEffectCore jarg2_);
  public final static native void EffekseerManagerCore_StopEffect(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_StopAllEffects(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_StopRoot(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native int EffekseerManagerCore_GetInstanceCount(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native int EffekseerManagerCore_GetTotalInstanceCount(long jarg1, EffekseerManagerCore jarg1_);
  public final static native float[] EffekseerManagerCore_GetMatrix(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetMatrix(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float[] jarg3);
  public final static native float[] EffekseerManagerCore_GetBaseMatrix(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetBaseMatrix(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float[] jarg3);
  public final static native long EffekseerManagerCore_GetLocation(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetLocation__SWIG_0(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void EffekseerManagerCore_SetLocation__SWIG_1(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3, Vector3D jarg3_);
  public final static native void EffekseerManagerCore_AddLocation(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3, Vector3D jarg3_);
  public final static native void EffekseerManagerCore_SetRotation__SWIG_0(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void EffekseerManagerCore_SetRotation__SWIG_1(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3, Vector3D jarg3_, float jarg4);
  public final static native void EffekseerManagerCore_SetScale(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void EffekseerManagerCore_SetAllColor(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3, Color jarg3_);
  public final static native void EffekseerManagerCore_SetTargetLocation__SWIG_0(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void EffekseerManagerCore_SetTargetLocation__SWIG_1(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3, Vector3D jarg3_);
  public final static native void EffekseerManagerCore_SetProjectionMatrix(long jarg1, EffekseerManagerCore jarg1_, float[] jarg2, float[] jarg3, boolean jarg4, float jarg5, float jarg6);
  public final static native float EffekseerManagerCore_GetDynamicInput(long jarg1, EffekseerManagerCore jarg1_, int jarg2, int jarg3);
  public final static native void EffekseerManagerCore_SetDynamicInput(long jarg1, EffekseerManagerCore jarg1_, int jarg2, int jarg3, float jarg4);
  public final static native boolean EffekseerManagerCore_GetShown(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetShown(long jarg1, EffekseerManagerCore jarg1_, int jarg2, boolean jarg3);
  public final static native boolean EffekseerManagerCore_GetPaused(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetPaused(long jarg1, EffekseerManagerCore jarg1_, int jarg2, boolean jarg3);
  public final static native void EffekseerManagerCore_SetPausedToAllEffects(long jarg1, EffekseerManagerCore jarg1_, boolean jarg2);
  public final static native int EffekseerManagerCore_GetLayer(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetLayer(long jarg1, EffekseerManagerCore jarg1_, int jarg2, int jarg3);
  public final static native long EffekseerManagerCore_GetGroupMask(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetGroupMask(long jarg1, EffekseerManagerCore jarg1_, int jarg2, long jarg3);
  public final static native float EffekseerManagerCore_GetSpeed(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_SetSpeed(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3);
  public final static native void EffekseerManagerCore_SetTimeScaleByGroup(long jarg1, EffekseerManagerCore jarg1_, long jarg2, float jarg3);
  public final static native void EffekseerManagerCore_SetTimeScaleByHandle(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3);
  public final static native void EffekseerManagerCore_SetAutoDrawing(long jarg1, EffekseerManagerCore jarg1_, int jarg2, boolean jarg3);
  public final static native void EffekseerManagerCore_Flip(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_Update__SWIG_0(long jarg1, EffekseerManagerCore jarg1_, float jarg2);
  public final static native void EffekseerManagerCore_Update__SWIG_1(long jarg1, EffekseerManagerCore jarg1_, long jarg2, EffekseerManagerParameters.UpdateParameter jarg2_);
  public final static native void EffekseerManagerCore_BeginUpdate(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_EndUpdate(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_UpdateHandle__SWIG_0(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3);
  public final static native void EffekseerManagerCore_UpdateHandle__SWIG_1(long jarg1, EffekseerManagerCore jarg1_, int jarg2);
  public final static native void EffekseerManagerCore_UpdateHandleToMoveToFrame(long jarg1, EffekseerManagerCore jarg1_, int jarg2, float jarg3);
  public final static native void EffekseerManagerCore_BeginRendering(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_Draw(long jarg1, EffekseerManagerCore jarg1_, long jarg2, EffekseerManagerParameters.DrawParameter jarg2_);
  public final static native void EffekseerManagerCore_DrawBack(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_DrawFront(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void EffekseerManagerCore_EndRendering(long jarg1, EffekseerManagerCore jarg1_);
  public final static native void Vector2D_x_set(long jarg1, Vector2D jarg1_, float jarg2);
  public final static native float Vector2D_x_get(long jarg1, Vector2D jarg1_);
  public final static native void Vector2D_y_set(long jarg1, Vector2D jarg1_, float jarg2);
  public final static native float Vector2D_y_get(long jarg1, Vector2D jarg1_);
  public final static native long new_Vector2D__SWIG_0();
  public final static native long new_Vector2D__SWIG_1(float jarg1, float jarg2);
  public final static native void delete_Vector2D(long jarg1);
  public final static native void Vector3D_x_set(long jarg1, Vector3D jarg1_, float jarg2);
  public final static native float Vector3D_x_get(long jarg1, Vector3D jarg1_);
  public final static native void Vector3D_y_set(long jarg1, Vector3D jarg1_, float jarg2);
  public final static native float Vector3D_y_get(long jarg1, Vector3D jarg1_);
  public final static native void Vector3D_z_set(long jarg1, Vector3D jarg1_, float jarg2);
  public final static native float Vector3D_z_get(long jarg1, Vector3D jarg1_);
  public final static native long new_Vector3D__SWIG_0();
  public final static native long new_Vector3D__SWIG_1(float jarg1, float jarg2, float jarg3);
  public final static native void delete_Vector3D(long jarg1);
  public final static native void Matrix43_Value_set(long jarg1, Matrix43 jarg1_, long jarg2);
  public final static native long Matrix43_Value_get(long jarg1, Matrix43 jarg1_);
  public final static native long new_Matrix43();
  public final static native void delete_Matrix43(long jarg1);
  public final static native long new_Matrix44();
  public final static native void Matrix44_Values_set(long jarg1, Matrix44 jarg1_, long jarg2);
  public final static native long Matrix44_Values_get(long jarg1, Matrix44 jarg1_);
  public final static native void delete_Matrix44(long jarg1);
  public final static native long new_SIMDVec2f__SWIG_0();
  public final static native long new_SIMDVec2f__SWIG_1(long jarg1, SIMDVec2f jarg1_);
  public final static native long new_SIMDVec2f__SWIG_2(float jarg1, float jarg2);
  public final static native long new_SIMDVec2f__SWIG_3(long jarg1, Vector2D jarg1_);
  public final static native long new_SIMDVec2f__SWIG_4(long jarg1, InternalStructVector2D jarg1_);
  public final static native void delete_SIMDVec2f(long jarg1);
  public final static native long new_SIMDVec3f__SWIG_0();
  public final static native long new_SIMDVec3f__SWIG_1(long jarg1, SIMDVec3f jarg1_);
  public final static native long new_SIMDVec3f__SWIG_2(float jarg1, float jarg2, float jarg3);
  public final static native long new_SIMDVec3f__SWIG_3(long jarg1, Vector3D jarg1_);
  public final static native long new_SIMDVec3f__SWIG_4(long jarg1, InternalStructVector3D jarg1_);
  public final static native float SIMDVec3f_getX(long jarg1, SIMDVec3f jarg1_);
  public final static native float SIMDVec3f_getY(long jarg1, SIMDVec3f jarg1_);
  public final static native float SIMDVec3f_getZ(long jarg1, SIMDVec3f jarg1_);
  public final static native void SIMDVec3f_setX(long jarg1, SIMDVec3f jarg1_, float jarg2);
  public final static native void SIMDVec3f_setY(long jarg1, SIMDVec3f jarg1_, float jarg2);
  public final static native void SIMDVec3f_setZ(long jarg1, SIMDVec3f jarg1_, float jarg2);
  public final static native void delete_SIMDVec3f(long jarg1);
  public final static native long new_SIMDMat43f__SWIG_0();
  public final static native long new_SIMDMat43f__SWIG_1(long jarg1, SIMDMat43f jarg1_);
  public final static native long new_SIMDMat43f__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12);
  public final static native long new_SIMDMat43f__SWIG_3(long jarg1, Matrix43 jarg1_);
  public final static native long SIMDMat43f_Identity_get();
  public final static native void delete_SIMDMat43f(long jarg1);
  public final static native long new_SIMDMat44f__SWIG_0();
  public final static native long new_SIMDMat44f__SWIG_1(long jarg1, SIMDMat44f jarg1_);
  public final static native long new_SIMDMat44f__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16);
  public final static native long new_SIMDMat44f__SWIG_3(long jarg1, SIMDMat43f jarg1_);
  public final static native long new_SIMDMat44f__SWIG_4(long jarg1, Matrix44 jarg1_);
  public final static native long SIMDMat44f_Identity_get();
  public final static native void delete_SIMDMat44f(long jarg1);
  public final static native int COLOR_MODE_DWORD_get();
  public final static native void Color_r_set(long jarg1, Color jarg1_, short jarg2);
  public final static native short Color_r_get(long jarg1, Color jarg1_);
  public final static native void Color_g_set(long jarg1, Color jarg1_, short jarg2);
  public final static native short Color_g_get(long jarg1, Color jarg1_);
  public final static native void Color_b_set(long jarg1, Color jarg1_, short jarg2);
  public final static native short Color_b_get(long jarg1, Color jarg1_);
  public final static native void Color_a_set(long jarg1, Color jarg1_, short jarg2);
  public final static native short Color_a_get(long jarg1, Color jarg1_);
  public final static native long new_Color__SWIG_0();
  public final static native long new_Color__SWIG_1(short jarg1, short jarg2, short jarg3, short jarg4);
  public final static native long new_Color__SWIG_2(short jarg1, short jarg2, short jarg3);
  public final static native void delete_Color(long jarg1);
  public final static native int UserTextureSlotMax_get();
  public final static native int UserUniformSlotMax_get();
  public final static native int TextureSlotMax_get();
  public final static native int LocalFieldSlotMax_get();
  public final static native float EFK_PI_get();
  public final static native int AlphaBlendType_Opacity_get();
  public final static native int AlphaBlendType_Blend_get();
  public final static native int AlphaBlendType_Add_get();
  public final static native int AlphaBlendType_Sub_get();
  public final static native int AlphaBlendType_Mul_get();
  public final static native int TextureFilterType_Nearest_get();
  public final static native int TextureFilterType_Linear_get();
  public final static native int TextureWrapType_Repeat_get();
  public final static native int TextureWrapType_Clamp_get();
  public final static native int CullingType_Front_get();
  public final static native int CullingType_Back_get();
  public final static native int CullingType_Double_get();
  public final static native int BillboardType_Billboard_get();
  public final static native int BillboardType_YAxisFixed_get();
  public final static native int BillboardType_Fixed_get();
  public final static native int BillboardType_RotatedBillboard_get();
  public final static native int CullingShape_NoneShape_get();
  public final static native int CullingShape_Sphere_get();
  public final static native int RendererMaterialType_Default_get();
  public final static native int RendererMaterialType_BackDistortion_get();
  public final static native int RendererMaterialType_Lighting_get();
  public final static native int RendererMaterialType_File_get();
  public final static native void MaterialTextureParameter_Type_set(long jarg1, MaterialTextureParameter jarg1_, int jarg2);
  public final static native int MaterialTextureParameter_Type_get(long jarg1, MaterialTextureParameter jarg1_);
  public final static native void MaterialTextureParameter_Index_set(long jarg1, MaterialTextureParameter jarg1_, int jarg2);
  public final static native int MaterialTextureParameter_Index_get(long jarg1, MaterialTextureParameter jarg1_);
  public final static native long new_MaterialTextureParameter();
  public final static native void delete_MaterialTextureParameter(long jarg1);
  public final static native void MaterialRenderData_MaterialIndex_set(long jarg1, MaterialRenderData jarg1_, int jarg2);
  public final static native int MaterialRenderData_MaterialIndex_get(long jarg1, MaterialRenderData jarg1_);
  public final static native long new_MaterialRenderData();
  public final static native void delete_MaterialRenderData(long jarg1);
  public final static native void NodeRendererDepthParameter_DepthOffset_set(long jarg1, NodeRendererDepthParameter jarg1_, float jarg2);
  public final static native float NodeRendererDepthParameter_DepthOffset_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native void NodeRendererDepthParameter_IsDepthOffsetScaledWithCamera_set(long jarg1, NodeRendererDepthParameter jarg1_, boolean jarg2);
  public final static native boolean NodeRendererDepthParameter_IsDepthOffsetScaledWithCamera_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native void NodeRendererDepthParameter_IsDepthOffsetScaledWithParticleScale_set(long jarg1, NodeRendererDepthParameter jarg1_, boolean jarg2);
  public final static native boolean NodeRendererDepthParameter_IsDepthOffsetScaledWithParticleScale_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native void NodeRendererDepthParameter_ZSort_set(long jarg1, NodeRendererDepthParameter jarg1_, int jarg2);
  public final static native int NodeRendererDepthParameter_ZSort_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native void NodeRendererDepthParameter_SuppressionOfScalingByDepth_set(long jarg1, NodeRendererDepthParameter jarg1_, float jarg2);
  public final static native float NodeRendererDepthParameter_SuppressionOfScalingByDepth_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native void NodeRendererDepthParameter_DepthClipping_set(long jarg1, NodeRendererDepthParameter jarg1_, float jarg2);
  public final static native float NodeRendererDepthParameter_DepthClipping_get(long jarg1, NodeRendererDepthParameter jarg1_);
  public final static native long new_NodeRendererDepthParameter();
  public final static native void delete_NodeRendererDepthParameter(long jarg1);
  public final static native void NodeRendererBasicParameter_MaterialType_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_MaterialType_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_DistortionIntensity_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_DistortionIntensity_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_MaterialRenderDataPtr_set(long jarg1, NodeRendererBasicParameter jarg1_, long jarg2, MaterialRenderData jarg2_);
  public final static native long NodeRendererBasicParameter_MaterialRenderDataPtr_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_AlphaBlend_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_AlphaBlend_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_UVDistortionIntensity_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_UVDistortionIntensity_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_TextureBlendType_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_TextureBlendType_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_BlendUVDistortionIntensity_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_BlendUVDistortionIntensity_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_EnableInterpolation_set(long jarg1, NodeRendererBasicParameter jarg1_, boolean jarg2);
  public final static native boolean NodeRendererBasicParameter_EnableInterpolation_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_UVLoopType_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_UVLoopType_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_InterpolationType_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_InterpolationType_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_FlipbookDivideX_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_FlipbookDivideX_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_FlipbookDivideY_set(long jarg1, NodeRendererBasicParameter jarg1_, int jarg2);
  public final static native int NodeRendererBasicParameter_FlipbookDivideY_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_EmissiveScaling_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_EmissiveScaling_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_EdgeThreshold_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_EdgeThreshold_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_EdgeColor_set(long jarg1, NodeRendererBasicParameter jarg1_, short[] jarg2);
  public final static native short[] NodeRendererBasicParameter_EdgeColor_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_EdgeColorScaling_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_EdgeColorScaling_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_IsAlphaCutoffEnabled_set(long jarg1, NodeRendererBasicParameter jarg1_, boolean jarg2);
  public final static native boolean NodeRendererBasicParameter_IsAlphaCutoffEnabled_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_SoftParticleDistanceFar_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_SoftParticleDistanceFar_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_SoftParticleDistanceNear_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_SoftParticleDistanceNear_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native void NodeRendererBasicParameter_SoftParticleDistanceNearOffset_set(long jarg1, NodeRendererBasicParameter jarg1_, float jarg2);
  public final static native float NodeRendererBasicParameter_SoftParticleDistanceNearOffset_get(long jarg1, NodeRendererBasicParameter jarg1_);
  public final static native long new_NodeRendererBasicParameter();
  public final static native void delete_NodeRendererBasicParameter(long jarg1);
  public final static native int INSTANCE_STATE_DWORD_get();
  public final static native int EFFECT_NODE_TYPE_ROOT_get();
  public final static native int EFFECT_NODE_TYPE_NONE_get();
  public final static native int EFFECT_NODE_TYPE_SPRITE_get();
  public final static native int EFFECT_NODE_TYPE_RIBBON_get();
  public final static native int EFFECT_NODE_TYPE_RING_get();
  public final static native int EFFECT_NODE_TYPE_MODEL_get();
  public final static native int EFFECT_NODE_TYPE_TRACK_get();
  public final static native int EFFECT_NODE_TYPE_DWORD_get();
  public final static native void InternalStructRandomFloat_max_set(long jarg1, InternalStructRandomFloat jarg1_, float jarg2);
  public final static native float InternalStructRandomFloat_max_get(long jarg1, InternalStructRandomFloat jarg1_);
  public final static native void InternalStructRandomFloat_min_set(long jarg1, InternalStructRandomFloat jarg1_, float jarg2);
  public final static native float InternalStructRandomFloat_min_get(long jarg1, InternalStructRandomFloat jarg1_);
  public final static native long new_InternalStructRandomFloat();
  public final static native void delete_InternalStructRandomFloat(long jarg1);
  public final static native void InternalStructRandomInt_max_set(long jarg1, InternalStructRandomInt jarg1_, int jarg2);
  public final static native int InternalStructRandomInt_max_get(long jarg1, InternalStructRandomInt jarg1_);
  public final static native void InternalStructRandomInt_min_set(long jarg1, InternalStructRandomInt jarg1_, int jarg2);
  public final static native int InternalStructRandomInt_min_get(long jarg1, InternalStructRandomInt jarg1_);
  public final static native long new_InternalStructRandomInt();
  public final static native void delete_InternalStructRandomInt(long jarg1);
  public final static native void InternalStructVector2D_x_set(long jarg1, InternalStructVector2D jarg1_, float jarg2);
  public final static native float InternalStructVector2D_x_get(long jarg1, InternalStructVector2D jarg1_);
  public final static native void InternalStructVector2D_y_set(long jarg1, InternalStructVector2D jarg1_, float jarg2);
  public final static native float InternalStructVector2D_y_get(long jarg1, InternalStructVector2D jarg1_);
  public final static native long new_InternalStructVector2D();
  public final static native void delete_InternalStructVector2D(long jarg1);
  public final static native void InternalStructRectF_x_set(long jarg1, InternalStructRectF jarg1_, float jarg2);
  public final static native float InternalStructRectF_x_get(long jarg1, InternalStructRectF jarg1_);
  public final static native void InternalStructRectF_y_set(long jarg1, InternalStructRectF jarg1_, float jarg2);
  public final static native float InternalStructRectF_y_get(long jarg1, InternalStructRectF jarg1_);
  public final static native void InternalStructRectF_w_set(long jarg1, InternalStructRectF jarg1_, float jarg2);
  public final static native float InternalStructRectF_w_get(long jarg1, InternalStructRectF jarg1_);
  public final static native void InternalStructRectF_h_set(long jarg1, InternalStructRectF jarg1_, float jarg2);
  public final static native float InternalStructRectF_h_get(long jarg1, InternalStructRectF jarg1_);
  public final static native long new_InternalStructRectF();
  public final static native void delete_InternalStructRectF(long jarg1);
  public final static native void InternalStructRandomVector2D_max_set(long jarg1, InternalStructRandomVector2D jarg1_, long jarg2, InternalStructVector2D jarg2_);
  public final static native long InternalStructRandomVector2D_max_get(long jarg1, InternalStructRandomVector2D jarg1_);
  public final static native void InternalStructRandomVector2D_min_set(long jarg1, InternalStructRandomVector2D jarg1_, long jarg2, InternalStructVector2D jarg2_);
  public final static native long InternalStructRandomVector2D_min_get(long jarg1, InternalStructRandomVector2D jarg1_);
  public final static native long new_InternalStructRandomVector2D();
  public final static native void delete_InternalStructRandomVector2D(long jarg1);
  public final static native void InternalStructFloatWithoutRandom_easingA_set(long jarg1, InternalStructFloatWithoutRandom jarg1_, float jarg2);
  public final static native float InternalStructFloatWithoutRandom_easingA_get(long jarg1, InternalStructFloatWithoutRandom jarg1_);
  public final static native void InternalStructFloatWithoutRandom_easingB_set(long jarg1, InternalStructFloatWithoutRandom jarg1_, float jarg2);
  public final static native float InternalStructFloatWithoutRandom_easingB_get(long jarg1, InternalStructFloatWithoutRandom jarg1_);
  public final static native void InternalStructFloatWithoutRandom_easingC_set(long jarg1, InternalStructFloatWithoutRandom jarg1_, float jarg2);
  public final static native float InternalStructFloatWithoutRandom_easingC_get(long jarg1, InternalStructFloatWithoutRandom jarg1_);
  public final static native long new_InternalStructFloatWithoutRandom();
  public final static native void delete_InternalStructFloatWithoutRandom(long jarg1);
  public final static native void InternalStructEasingFloat_start_set(long jarg1, InternalStructEasingFloat jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long InternalStructEasingFloat_start_get(long jarg1, InternalStructEasingFloat jarg1_);
  public final static native void InternalStructEasingFloat_end_set(long jarg1, InternalStructEasingFloat jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long InternalStructEasingFloat_end_get(long jarg1, InternalStructEasingFloat jarg1_);
  public final static native void InternalStructEasingFloat_easingA_set(long jarg1, InternalStructEasingFloat jarg1_, float jarg2);
  public final static native float InternalStructEasingFloat_easingA_get(long jarg1, InternalStructEasingFloat jarg1_);
  public final static native void InternalStructEasingFloat_easingB_set(long jarg1, InternalStructEasingFloat jarg1_, float jarg2);
  public final static native float InternalStructEasingFloat_easingB_get(long jarg1, InternalStructEasingFloat jarg1_);
  public final static native void InternalStructEasingFloat_easingC_set(long jarg1, InternalStructEasingFloat jarg1_, float jarg2);
  public final static native float InternalStructEasingFloat_easingC_get(long jarg1, InternalStructEasingFloat jarg1_);
  public final static native long new_InternalStructEasingFloat();
  public final static native void delete_InternalStructEasingFloat(long jarg1);
  public final static native void InternalStructEasingVector2D_start_set(long jarg1, InternalStructEasingVector2D jarg1_, long jarg2, InternalStructRandomVector2D jarg2_);
  public final static native long InternalStructEasingVector2D_start_get(long jarg1, InternalStructEasingVector2D jarg1_);
  public final static native void InternalStructEasingVector2D_end_set(long jarg1, InternalStructEasingVector2D jarg1_, long jarg2, InternalStructRandomVector2D jarg2_);
  public final static native long InternalStructEasingVector2D_end_get(long jarg1, InternalStructEasingVector2D jarg1_);
  public final static native void InternalStructEasingVector2D_easingA_set(long jarg1, InternalStructEasingVector2D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector2D_easingA_get(long jarg1, InternalStructEasingVector2D jarg1_);
  public final static native void InternalStructEasingVector2D_easingB_set(long jarg1, InternalStructEasingVector2D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector2D_easingB_get(long jarg1, InternalStructEasingVector2D jarg1_);
  public final static native void InternalStructEasingVector2D_easingC_set(long jarg1, InternalStructEasingVector2D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector2D_easingC_get(long jarg1, InternalStructEasingVector2D jarg1_);
  public final static native long new_InternalStructEasingVector2D();
  public final static native void delete_InternalStructEasingVector2D(long jarg1);
  public final static native void InternalStructVector3D_x_set(long jarg1, InternalStructVector3D jarg1_, float jarg2);
  public final static native float InternalStructVector3D_x_get(long jarg1, InternalStructVector3D jarg1_);
  public final static native void InternalStructVector3D_y_set(long jarg1, InternalStructVector3D jarg1_, float jarg2);
  public final static native float InternalStructVector3D_y_get(long jarg1, InternalStructVector3D jarg1_);
  public final static native void InternalStructVector3D_z_set(long jarg1, InternalStructVector3D jarg1_, float jarg2);
  public final static native float InternalStructVector3D_z_get(long jarg1, InternalStructVector3D jarg1_);
  public final static native long new_InternalStructVector3D();
  public final static native void delete_InternalStructVector3D(long jarg1);
  public final static native void InternalStructRandomVector3D_max_set(long jarg1, InternalStructRandomVector3D jarg1_, long jarg2, InternalStructVector3D jarg2_);
  public final static native long InternalStructRandomVector3D_max_get(long jarg1, InternalStructRandomVector3D jarg1_);
  public final static native void InternalStructRandomVector3D_min_set(long jarg1, InternalStructRandomVector3D jarg1_, long jarg2, InternalStructVector3D jarg2_);
  public final static native long InternalStructRandomVector3D_min_get(long jarg1, InternalStructRandomVector3D jarg1_);
  public final static native long new_InternalStructRandomVector3D();
  public final static native void delete_InternalStructRandomVector3D(long jarg1);
  public final static native void InternalStructEasingVector3D_start_set(long jarg1, InternalStructEasingVector3D jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long InternalStructEasingVector3D_start_get(long jarg1, InternalStructEasingVector3D jarg1_);
  public final static native void InternalStructEasingVector3D_end_set(long jarg1, InternalStructEasingVector3D jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long InternalStructEasingVector3D_end_get(long jarg1, InternalStructEasingVector3D jarg1_);
  public final static native void InternalStructEasingVector3D_easingA_set(long jarg1, InternalStructEasingVector3D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector3D_easingA_get(long jarg1, InternalStructEasingVector3D jarg1_);
  public final static native void InternalStructEasingVector3D_easingB_set(long jarg1, InternalStructEasingVector3D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector3D_easingB_get(long jarg1, InternalStructEasingVector3D jarg1_);
  public final static native void InternalStructEasingVector3D_easingC_set(long jarg1, InternalStructEasingVector3D jarg1_, float jarg2);
  public final static native float InternalStructEasingVector3D_easingC_get(long jarg1, InternalStructEasingVector3D jarg1_);
  public final static native long new_InternalStructEasingVector3D();
  public final static native void delete_InternalStructEasingVector3D(long jarg1);
  public final static native void InternalStructRandomColor_mode_set(long jarg1, InternalStructRandomColor jarg1_, int jarg2);
  public final static native int InternalStructRandomColor_mode_get(long jarg1, InternalStructRandomColor jarg1_);
  public final static native void InternalStructRandomColor_max_set(long jarg1, InternalStructRandomColor jarg1_, long jarg2, Color jarg2_);
  public final static native long InternalStructRandomColor_max_get(long jarg1, InternalStructRandomColor jarg1_);
  public final static native void InternalStructRandomColor_min_set(long jarg1, InternalStructRandomColor jarg1_, long jarg2, Color jarg2_);
  public final static native long InternalStructRandomColor_min_get(long jarg1, InternalStructRandomColor jarg1_);
  public final static native long new_InternalStructRandomColor();
  public final static native void delete_InternalStructRandomColor(long jarg1);
  public final static native void InternalStructEasingColor_start_set(long jarg1, InternalStructEasingColor jarg1_, long jarg2, InternalStructRandomColor jarg2_);
  public final static native long InternalStructEasingColor_start_get(long jarg1, InternalStructEasingColor jarg1_);
  public final static native void InternalStructEasingColor_end_set(long jarg1, InternalStructEasingColor jarg1_, long jarg2, InternalStructRandomColor jarg2_);
  public final static native long InternalStructEasingColor_end_get(long jarg1, InternalStructEasingColor jarg1_);
  public final static native void InternalStructEasingColor_easingA_set(long jarg1, InternalStructEasingColor jarg1_, float jarg2);
  public final static native float InternalStructEasingColor_easingA_get(long jarg1, InternalStructEasingColor jarg1_);
  public final static native void InternalStructEasingColor_easingB_set(long jarg1, InternalStructEasingColor jarg1_, float jarg2);
  public final static native float InternalStructEasingColor_easingB_get(long jarg1, InternalStructEasingColor jarg1_);
  public final static native void InternalStructEasingColor_easingC_set(long jarg1, InternalStructEasingColor jarg1_, float jarg2);
  public final static native float InternalStructEasingColor_easingC_get(long jarg1, InternalStructEasingColor jarg1_);
  public final static native long new_InternalStructEasingColor();
  public final static native void delete_InternalStructEasingColor(long jarg1);
  public final static native void NodeRendererTextureUVTypeParameter_Type_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, int jarg2);
  public final static native int NodeRendererTextureUVTypeParameter_Type_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native void NodeRendererTextureUVTypeParameter_TileLength_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, float jarg2);
  public final static native float NodeRendererTextureUVTypeParameter_TileLength_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native void NodeRendererTextureUVTypeParameter_TileEdgeHead_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, int jarg2);
  public final static native int NodeRendererTextureUVTypeParameter_TileEdgeHead_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native void NodeRendererTextureUVTypeParameter_TileEdgeTail_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, int jarg2);
  public final static native int NodeRendererTextureUVTypeParameter_TileEdgeTail_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native void NodeRendererTextureUVTypeParameter_TileLoopAreaBegin_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, float jarg2);
  public final static native float NodeRendererTextureUVTypeParameter_TileLoopAreaBegin_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native void NodeRendererTextureUVTypeParameter_TileLoopAreaEnd_set(long jarg1, NodeRendererTextureUVTypeParameter jarg1_, float jarg2);
  public final static native float NodeRendererTextureUVTypeParameter_TileLoopAreaEnd_get(long jarg1, NodeRendererTextureUVTypeParameter jarg1_);
  public final static native long new_NodeRendererTextureUVTypeParameter();
  public final static native void delete_NodeRendererTextureUVTypeParameter(long jarg1);
  public final static native int FalloffParameter_Add_get();
  public final static native int FalloffParameter_Sub_get();
  public final static native int FalloffParameter_Mul_get();
  public final static native void FalloffParameter_ColorBlendType_set(long jarg1, FalloffParameter jarg1_, int jarg2);
  public final static native int FalloffParameter_ColorBlendType_get(long jarg1, FalloffParameter jarg1_);
  public final static native void FalloffParameter_BeginColor_set(long jarg1, FalloffParameter jarg1_, long jarg2, Color jarg2_);
  public final static native long FalloffParameter_BeginColor_get(long jarg1, FalloffParameter jarg1_);
  public final static native void FalloffParameter_EndColor_set(long jarg1, FalloffParameter jarg1_, long jarg2, Color jarg2_);
  public final static native long FalloffParameter_EndColor_get(long jarg1, FalloffParameter jarg1_);
  public final static native void FalloffParameter_Pow_set(long jarg1, FalloffParameter jarg1_, float jarg2);
  public final static native float FalloffParameter_Pow_get(long jarg1, FalloffParameter jarg1_);
  public final static native long new_FalloffParameter();
  public final static native void delete_FalloffParameter(long jarg1);
  public final static native void RefMinMax_Max_set(long jarg1, RefMinMax jarg1_, int jarg2);
  public final static native int RefMinMax_Max_get(long jarg1, RefMinMax jarg1_);
  public final static native void RefMinMax_Min_set(long jarg1, RefMinMax jarg1_, int jarg2);
  public final static native int RefMinMax_Min_get(long jarg1, RefMinMax jarg1_);
  public final static native long new_RefMinMax();
  public final static native void delete_RefMinMax(long jarg1);
  public final static native int Easing3Type_StartEndSpeed_get();
  public final static native int Easing3Type_Linear_get();
  public final static native int Easing3Type_EaseInQuadratic_get();
  public final static native int Easing3Type_EaseOutQuadratic_get();
  public final static native int Easing3Type_EaseInOutQuadratic_get();
  public final static native int Easing3Type_EaseInCubic_get();
  public final static native int Easing3Type_EaseOutCubic_get();
  public final static native int Easing3Type_EaseInOutCubic_get();
  public final static native int Easing3Type_EaseInQuartic_get();
  public final static native int Easing3Type_EaseOutQuartic_get();
  public final static native int Easing3Type_EaseInOutQuartic_get();
  public final static native int Easing3Type_EaseInQuintic_get();
  public final static native int Easing3Type_EaseOutQuintic_get();
  public final static native int Easing3Type_EaseInOutQuintic_get();
  public final static native int Easing3Type_EaseInBack_get();
  public final static native int Easing3Type_EaseOutBack_get();
  public final static native int Easing3Type_EaseInOutBack_get();
  public final static native int Easing3Type_EaseInBounce_get();
  public final static native int Easing3Type_EaseOutBounce_get();
  public final static native int Easing3Type_EaseInOutBounce_get();
  public final static native long new_ParameterEasingFloat(int jarg1, int jarg2);
  public final static native void delete_ParameterEasingFloat(long jarg1);
  public final static native long new_ParameterEasingSIMDVec3();
  public final static native void delete_ParameterEasingSIMDVec3(long jarg1);
  public final static native int FCurveTimelineType_Time_get();
  public final static native int FCurveTimelineType_Percent_get();
  public final static native long new_FCurve(float jarg1);
  public final static native void delete_FCurve(long jarg1);
  public final static native void FCurveScalar_Timeline_set(long jarg1, FCurveScalar jarg1_, int jarg2);
  public final static native int FCurveScalar_Timeline_get(long jarg1, FCurveScalar jarg1_);
  public final static native void FCurveScalar_S_set(long jarg1, FCurveScalar jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveScalar_S_get(long jarg1, FCurveScalar jarg1_);
  public final static native long new_FCurveScalar();
  public final static native void delete_FCurveScalar(long jarg1);
  public final static native void FCurveVector2D_Timeline_set(long jarg1, FCurveVector2D jarg1_, int jarg2);
  public final static native int FCurveVector2D_Timeline_get(long jarg1, FCurveVector2D jarg1_);
  public final static native void FCurveVector2D_X_set(long jarg1, FCurveVector2D jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVector2D_X_get(long jarg1, FCurveVector2D jarg1_);
  public final static native void FCurveVector2D_Y_set(long jarg1, FCurveVector2D jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVector2D_Y_get(long jarg1, FCurveVector2D jarg1_);
  public final static native long new_FCurveVector2D();
  public final static native void delete_FCurveVector2D(long jarg1);
  public final static native void FCurveVector3D_Timeline_set(long jarg1, FCurveVector3D jarg1_, int jarg2);
  public final static native int FCurveVector3D_Timeline_get(long jarg1, FCurveVector3D jarg1_);
  public final static native void FCurveVector3D_X_set(long jarg1, FCurveVector3D jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVector3D_X_get(long jarg1, FCurveVector3D jarg1_);
  public final static native void FCurveVector3D_Y_set(long jarg1, FCurveVector3D jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVector3D_Y_get(long jarg1, FCurveVector3D jarg1_);
  public final static native void FCurveVector3D_Z_set(long jarg1, FCurveVector3D jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVector3D_Z_get(long jarg1, FCurveVector3D jarg1_);
  public final static native long new_FCurveVector3D();
  public final static native void delete_FCurveVector3D(long jarg1);
  public final static native void FCurveVectorColor_Timeline_set(long jarg1, FCurveVectorColor jarg1_, int jarg2);
  public final static native int FCurveVectorColor_Timeline_get(long jarg1, FCurveVectorColor jarg1_);
  public final static native void FCurveVectorColor_R_set(long jarg1, FCurveVectorColor jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVectorColor_R_get(long jarg1, FCurveVectorColor jarg1_);
  public final static native void FCurveVectorColor_G_set(long jarg1, FCurveVectorColor jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVectorColor_G_get(long jarg1, FCurveVectorColor jarg1_);
  public final static native void FCurveVectorColor_B_set(long jarg1, FCurveVectorColor jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVectorColor_B_get(long jarg1, FCurveVectorColor jarg1_);
  public final static native void FCurveVectorColor_A_set(long jarg1, FCurveVectorColor jarg1_, long jarg2, FCurve jarg2_);
  public final static native long FCurveVectorColor_A_get(long jarg1, FCurveVectorColor jarg1_);
  public final static native long new_FCurveVectorColor();
  public final static native void delete_FCurveVectorColor(long jarg1);
  public final static native long new_PerlinNoise__SWIG_0();
  public final static native long new_PerlinNoise__SWIG_1(long jarg1);
  public final static native void delete_PerlinNoise(long jarg1);
  public final static native void ForceFieldCommonParameter_Position_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldCommonParameter_Position_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_PreviousVelocity_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldCommonParameter_PreviousVelocity_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_PreviousSumVelocity_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldCommonParameter_PreviousSumVelocity_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_FieldCenter_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldCommonParameter_FieldCenter_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_TargetPosition_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldCommonParameter_TargetPosition_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_FieldRotation_set(long jarg1, ForceFieldCommonParameter jarg1_, long jarg2, SIMDMat44f jarg2_);
  public final static native long ForceFieldCommonParameter_FieldRotation_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_IsFieldRotated_set(long jarg1, ForceFieldCommonParameter jarg1_, boolean jarg2);
  public final static native boolean ForceFieldCommonParameter_IsFieldRotated_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native void ForceFieldCommonParameter_DeltaFrame_set(long jarg1, ForceFieldCommonParameter jarg1_, float jarg2);
  public final static native float ForceFieldCommonParameter_DeltaFrame_get(long jarg1, ForceFieldCommonParameter jarg1_);
  public final static native long new_ForceFieldCommonParameter();
  public final static native void delete_ForceFieldCommonParameter(long jarg1);
  public final static native void ForceFieldFalloffCommonParameter_Power_set(long jarg1, ForceFieldFalloffCommonParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffCommonParameter_Power_get(long jarg1, ForceFieldFalloffCommonParameter jarg1_);
  public final static native void ForceFieldFalloffCommonParameter_MinDistance_set(long jarg1, ForceFieldFalloffCommonParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffCommonParameter_MinDistance_get(long jarg1, ForceFieldFalloffCommonParameter jarg1_);
  public final static native void ForceFieldFalloffCommonParameter_MaxDistance_set(long jarg1, ForceFieldFalloffCommonParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffCommonParameter_MaxDistance_get(long jarg1, ForceFieldFalloffCommonParameter jarg1_);
  public final static native long new_ForceFieldFalloffCommonParameter();
  public final static native void delete_ForceFieldFalloffCommonParameter(long jarg1);
  public final static native long new_ForceFieldFalloffSphereParameter();
  public final static native void delete_ForceFieldFalloffSphereParameter(long jarg1);
  public final static native void ForceFieldFalloffTubeParameter_RadiusPower_set(long jarg1, ForceFieldFalloffTubeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffTubeParameter_RadiusPower_get(long jarg1, ForceFieldFalloffTubeParameter jarg1_);
  public final static native void ForceFieldFalloffTubeParameter_MinRadius_set(long jarg1, ForceFieldFalloffTubeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffTubeParameter_MinRadius_get(long jarg1, ForceFieldFalloffTubeParameter jarg1_);
  public final static native void ForceFieldFalloffTubeParameter_MaxRadius_set(long jarg1, ForceFieldFalloffTubeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffTubeParameter_MaxRadius_get(long jarg1, ForceFieldFalloffTubeParameter jarg1_);
  public final static native long new_ForceFieldFalloffTubeParameter();
  public final static native void delete_ForceFieldFalloffTubeParameter(long jarg1);
  public final static native void ForceFieldFalloffConeParameter_AnglePower_set(long jarg1, ForceFieldFalloffConeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffConeParameter_AnglePower_get(long jarg1, ForceFieldFalloffConeParameter jarg1_);
  public final static native void ForceFieldFalloffConeParameter_MinAngle_set(long jarg1, ForceFieldFalloffConeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffConeParameter_MinAngle_get(long jarg1, ForceFieldFalloffConeParameter jarg1_);
  public final static native void ForceFieldFalloffConeParameter_MaxAngle_set(long jarg1, ForceFieldFalloffConeParameter jarg1_, float jarg2);
  public final static native float ForceFieldFalloffConeParameter_MaxAngle_get(long jarg1, ForceFieldFalloffConeParameter jarg1_);
  public final static native long new_ForceFieldFalloffConeParameter();
  public final static native void delete_ForceFieldFalloffConeParameter(long jarg1);
  public final static native void ForceFieldForceParameter_Power_set(long jarg1, ForceFieldForceParameter jarg1_, float jarg2);
  public final static native float ForceFieldForceParameter_Power_get(long jarg1, ForceFieldForceParameter jarg1_);
  public final static native void ForceFieldForceParameter_Gravitation_set(long jarg1, ForceFieldForceParameter jarg1_, boolean jarg2);
  public final static native boolean ForceFieldForceParameter_Gravitation_get(long jarg1, ForceFieldForceParameter jarg1_);
  public final static native long new_ForceFieldForceParameter();
  public final static native void delete_ForceFieldForceParameter(long jarg1);
  public final static native void ForceFieldWindParameter_Power_set(long jarg1, ForceFieldWindParameter jarg1_, float jarg2);
  public final static native float ForceFieldWindParameter_Power_get(long jarg1, ForceFieldWindParameter jarg1_);
  public final static native long new_ForceFieldWindParameter();
  public final static native void delete_ForceFieldWindParameter(long jarg1);
  public final static native int ForceFieldVortexType_ConstantAngle_get();
  public final static native int ForceFieldVortexType_ConstantSpeed_get();
  public final static native void ForceFieldVortexParameter_Type_set(long jarg1, ForceFieldVortexParameter jarg1_, int jarg2);
  public final static native int ForceFieldVortexParameter_Type_get(long jarg1, ForceFieldVortexParameter jarg1_);
  public final static native void ForceFieldVortexParameter_Power_set(long jarg1, ForceFieldVortexParameter jarg1_, float jarg2);
  public final static native float ForceFieldVortexParameter_Power_get(long jarg1, ForceFieldVortexParameter jarg1_);
  public final static native long new_ForceFieldVortexParameter();
  public final static native void delete_ForceFieldVortexParameter(long jarg1);
  public final static native int ForceFieldTurbulenceType_Simple_get();
  public final static native int ForceFieldTurbulenceType_Complicated_get();
  public final static native void ForceFieldTurbulenceParameter_Power_set(long jarg1, ForceFieldTurbulenceParameter jarg1_, float jarg2);
  public final static native float ForceFieldTurbulenceParameter_Power_get(long jarg1, ForceFieldTurbulenceParameter jarg1_);
  public final static native long new_ForceFieldTurbulenceParameter(int jarg1, int jarg2, float jarg3, float jarg4, int jarg5);
  public final static native void delete_ForceFieldTurbulenceParameter(long jarg1);
  public final static native void ForceFieldDragParameter_Power_set(long jarg1, ForceFieldDragParameter jarg1_, float jarg2);
  public final static native float ForceFieldDragParameter_Power_get(long jarg1, ForceFieldDragParameter jarg1_);
  public final static native long new_ForceFieldDragParameter();
  public final static native void delete_ForceFieldDragParameter(long jarg1);
  public final static native void ForceFieldGravityParameter_Gravity_set(long jarg1, ForceFieldGravityParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long ForceFieldGravityParameter_Gravity_get(long jarg1, ForceFieldGravityParameter jarg1_);
  public final static native long new_ForceFieldGravityParameter();
  public final static native void delete_ForceFieldGravityParameter(long jarg1);
  public final static native void ForceFieldAttractiveForceParameter_Force_set(long jarg1, ForceFieldAttractiveForceParameter jarg1_, float jarg2);
  public final static native float ForceFieldAttractiveForceParameter_Force_get(long jarg1, ForceFieldAttractiveForceParameter jarg1_);
  public final static native void ForceFieldAttractiveForceParameter_Control_set(long jarg1, ForceFieldAttractiveForceParameter jarg1_, float jarg2);
  public final static native float ForceFieldAttractiveForceParameter_Control_get(long jarg1, ForceFieldAttractiveForceParameter jarg1_);
  public final static native void ForceFieldAttractiveForceParameter_MinRange_set(long jarg1, ForceFieldAttractiveForceParameter jarg1_, float jarg2);
  public final static native float ForceFieldAttractiveForceParameter_MinRange_get(long jarg1, ForceFieldAttractiveForceParameter jarg1_);
  public final static native void ForceFieldAttractiveForceParameter_MaxRange_set(long jarg1, ForceFieldAttractiveForceParameter jarg1_, float jarg2);
  public final static native float ForceFieldAttractiveForceParameter_MaxRange_get(long jarg1, ForceFieldAttractiveForceParameter jarg1_);
  public final static native long new_ForceFieldAttractiveForceParameter();
  public final static native void delete_ForceFieldAttractiveForceParameter(long jarg1);
  public final static native long new_ForceFieldFalloff();
  public final static native void delete_ForceFieldFalloff(long jarg1);
  public final static native long new_ForceField();
  public final static native void delete_ForceField(long jarg1);
  public final static native int LocalForceFieldFalloffType_None_get();
  public final static native int LocalForceFieldFalloffType_Sphere_get();
  public final static native int LocalForceFieldFalloffType_Tube_get();
  public final static native int LocalForceFieldFalloffType_Cone_get();
  public final static native int LocalForceFieldType_None_get();
  public final static native int LocalForceFieldType_Force_get();
  public final static native int LocalForceFieldType_Wind_get();
  public final static native int LocalForceFieldType_Vortex_get();
  public final static native int LocalForceFieldType_Turbulence_get();
  public final static native int LocalForceFieldType_Drag_get();
  public final static native int LocalForceFieldType_Gravity_get();
  public final static native int LocalForceFieldType_AttractiveForce_get();
  public final static native void LocalForceFieldElementParameter_Position_set(long jarg1, LocalForceFieldElementParameter jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long LocalForceFieldElementParameter_Position_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native void LocalForceFieldElementParameter_Rotation_set(long jarg1, LocalForceFieldElementParameter jarg1_, long jarg2, SIMDMat44f jarg2_);
  public final static native long LocalForceFieldElementParameter_Rotation_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native void LocalForceFieldElementParameter_InvRotation_set(long jarg1, LocalForceFieldElementParameter jarg1_, long jarg2, SIMDMat44f jarg2_);
  public final static native long LocalForceFieldElementParameter_InvRotation_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native void LocalForceFieldElementParameter_IsRotated_set(long jarg1, LocalForceFieldElementParameter jarg1_, boolean jarg2);
  public final static native boolean LocalForceFieldElementParameter_IsRotated_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native void LocalForceFieldElementParameter_IsGlobal_set(long jarg1, LocalForceFieldElementParameter jarg1_, boolean jarg2);
  public final static native boolean LocalForceFieldElementParameter_IsGlobal_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native void LocalForceFieldElementParameter_HasValue_set(long jarg1, LocalForceFieldElementParameter jarg1_, boolean jarg2);
  public final static native boolean LocalForceFieldElementParameter_HasValue_get(long jarg1, LocalForceFieldElementParameter jarg1_);
  public final static native long new_LocalForceFieldElementParameter();
  public final static native void delete_LocalForceFieldElementParameter(long jarg1);
  public final static native void LocalForceFieldParameter_HasValue_set(long jarg1, LocalForceFieldParameter jarg1_, boolean jarg2);
  public final static native boolean LocalForceFieldParameter_HasValue_get(long jarg1, LocalForceFieldParameter jarg1_);
  public final static native void LocalForceFieldParameter_IsGlobalEnabled_set(long jarg1, LocalForceFieldParameter jarg1_, boolean jarg2);
  public final static native boolean LocalForceFieldParameter_IsGlobalEnabled_get(long jarg1, LocalForceFieldParameter jarg1_);
  public final static native long new_LocalForceFieldParameter();
  public final static native void delete_LocalForceFieldParameter(long jarg1);
  public final static native void LocalForceFieldInstance_ExternalVelocity_set(long jarg1, LocalForceFieldInstance jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocalForceFieldInstance_ExternalVelocity_get(long jarg1, LocalForceFieldInstance jarg1_);
  public final static native void LocalForceFieldInstance_VelocitySum_set(long jarg1, LocalForceFieldInstance jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocalForceFieldInstance_VelocitySum_get(long jarg1, LocalForceFieldInstance jarg1_);
  public final static native void LocalForceFieldInstance_ModifyLocation_set(long jarg1, LocalForceFieldInstance jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocalForceFieldInstance_ModifyLocation_get(long jarg1, LocalForceFieldInstance jarg1_);
  public final static native void LocalForceFieldInstance_GlobalVelocitySum_set(long jarg1, LocalForceFieldInstance jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocalForceFieldInstance_GlobalVelocitySum_get(long jarg1, LocalForceFieldInstance jarg1_);
  public final static native void LocalForceFieldInstance_GlobalModifyLocation_set(long jarg1, LocalForceFieldInstance jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocalForceFieldInstance_GlobalModifyLocation_get(long jarg1, LocalForceFieldInstance jarg1_);
  public final static native long new_LocalForceFieldInstance();
  public final static native void delete_LocalForceFieldInstance(long jarg1);
  public final static native void EffectTerm_TermMin_set(long jarg1, EffectTerm jarg1_, int jarg2);
  public final static native int EffectTerm_TermMin_get(long jarg1, EffectTerm jarg1_);
  public final static native void EffectTerm_TermMax_set(long jarg1, EffectTerm jarg1_, int jarg2);
  public final static native int EffectTerm_TermMax_get(long jarg1, EffectTerm jarg1_);
  public final static native long new_EffectTerm();
  public final static native void delete_EffectTerm(long jarg1);
  public final static native void EffectInstanceTerm_FirstInstanceStartMin_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_FirstInstanceStartMin_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_FirstInstanceStartMax_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_FirstInstanceStartMax_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_FirstInstanceEndMin_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_FirstInstanceEndMin_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_FirstInstanceEndMax_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_FirstInstanceEndMax_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_LastInstanceStartMin_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_LastInstanceStartMin_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_LastInstanceStartMax_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_LastInstanceStartMax_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_LastInstanceEndMin_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_LastInstanceEndMin_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native void EffectInstanceTerm_LastInstanceEndMax_set(long jarg1, EffectInstanceTerm jarg1_, int jarg2);
  public final static native int EffectInstanceTerm_LastInstanceEndMax_get(long jarg1, EffectInstanceTerm jarg1_);
  public final static native long new_EffectInstanceTerm();
  public final static native void delete_EffectInstanceTerm(long jarg1);
  public final static native void EffectBasicRenderParameter_MaterialIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_MaterialIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_ColorTextureIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_ColorTextureIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_AlphaTextureIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_AlphaTextureIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_AlphaTexWrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_AlphaTexWrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_UVDistortionIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_UVDistortionIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_UVDistortionTexWrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_UVDistortionTexWrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendTextureIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendTextureIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendTexWrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendTexWrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendAlphaTextureIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendAlphaTextureIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendAlphaTexWrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendAlphaTexWrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendUVDistortionTextureIndex_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendUVDistortionTextureIndex_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendUVDistortionTexWrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_BlendUVDistortionTexWrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_FlipbookParameters_Enable_set(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_, boolean jarg2);
  public final static native boolean EffectBasicRenderParameter_FlipbookParameters_Enable_get(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_);
  public final static native void EffectBasicRenderParameter_FlipbookParameters_LoopType_set(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_FlipbookParameters_LoopType_get(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_);
  public final static native void EffectBasicRenderParameter_FlipbookParameters_DivideX_set(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_FlipbookParameters_DivideX_get(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_);
  public final static native void EffectBasicRenderParameter_FlipbookParameters_DivideY_set(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_FlipbookParameters_DivideY_get(long jarg1, EffectBasicRenderParameter.FlipbookParameters jarg1_);
  public final static native long new_EffectBasicRenderParameter_FlipbookParameters();
  public final static native void delete_EffectBasicRenderParameter_FlipbookParameters(long jarg1);
  public final static native void EffectBasicRenderParameter_FlipbookParams_set(long jarg1, EffectBasicRenderParameter jarg1_, long jarg2, EffectBasicRenderParameter.FlipbookParameters jarg2_);
  public final static native long EffectBasicRenderParameter_FlipbookParams_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_MaterialType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_MaterialType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_UVDistortionIntensity_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_UVDistortionIntensity_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_TextureBlendType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_TextureBlendType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_BlendUVDistortionIntensity_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_BlendUVDistortionIntensity_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_EnableFalloff_set(long jarg1, EffectBasicRenderParameter jarg1_, boolean jarg2);
  public final static native boolean EffectBasicRenderParameter_EnableFalloff_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_EmissiveScaling_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_EmissiveScaling_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_AlphaBlend_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_AlphaBlend_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_FilterType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_FilterType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_WrapType_set(long jarg1, EffectBasicRenderParameter jarg1_, int jarg2);
  public final static native int EffectBasicRenderParameter_WrapType_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_ZWrite_set(long jarg1, EffectBasicRenderParameter jarg1_, boolean jarg2);
  public final static native boolean EffectBasicRenderParameter_ZWrite_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_ZTest_set(long jarg1, EffectBasicRenderParameter jarg1_, boolean jarg2);
  public final static native boolean EffectBasicRenderParameter_ZTest_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_Distortion_set(long jarg1, EffectBasicRenderParameter jarg1_, boolean jarg2);
  public final static native boolean EffectBasicRenderParameter_Distortion_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_DistortionIntensity_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_DistortionIntensity_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_SoftParticleDistanceFar_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_SoftParticleDistanceFar_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_SoftParticleDistanceNear_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_SoftParticleDistanceNear_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native void EffectBasicRenderParameter_SoftParticleDistanceNearOffset_set(long jarg1, EffectBasicRenderParameter jarg1_, float jarg2);
  public final static native float EffectBasicRenderParameter_SoftParticleDistanceNearOffset_get(long jarg1, EffectBasicRenderParameter jarg1_);
  public final static native long new_EffectBasicRenderParameter();
  public final static native void delete_EffectBasicRenderParameter(long jarg1);
  public final static native void EffectModelParameter_Lighting_set(long jarg1, EffectModelParameter jarg1_, boolean jarg2);
  public final static native boolean EffectModelParameter_Lighting_get(long jarg1, EffectModelParameter jarg1_);
  public final static native long new_EffectModelParameter();
  public final static native void delete_EffectModelParameter(long jarg1);
  public final static native void delete_EffectNode(long jarg1);
  public final static native long EffectNode_getEffect(long jarg1, EffectNode jarg1_);
  public final static native int EffectNode_getGeneration(long jarg1, EffectNode jarg1_);
  public final static native int EffectNode_getChildrenCount(long jarg1, EffectNode jarg1_);
  public final static native long EffectNode_getNonImplementedChild(long jarg1, EffectNode jarg1_, int jarg2);
  public final static native long EffectNode_getBasicRenderParameter(long jarg1, EffectNode jarg1_);
  public final static native void EffectNode_setBasicRenderParameter(long jarg1, EffectNode jarg1_, long jarg2, EffectBasicRenderParameter jarg2_);
  public final static native long EffectNode_getEffectModelParameter(long jarg1, EffectNode jarg1_);
  public final static native long EffectNode_calculateInstanceTerm(long jarg1, EffectNode jarg1_, long jarg2, EffectInstanceTerm jarg2_);
  public final static native long EffectNode_getChild(long jarg1, EffectNode jarg1_, int jarg2);
  public final static native long EffectNode_getChildAsSprite(long jarg1, EffectNode jarg1_, int jarg2);
  public final static native int BindType_NotBind_get();
  public final static native int BindType_NotBind_Root_get();
  public final static native int BindType_WhenCreating_get();
  public final static native int BindType_Always_get();
  public final static native int TranslationParentBindType_NotBind_get();
  public final static native int TranslationParentBindType_NotBind_Root_get();
  public final static native int TranslationParentBindType_WhenCreating_get();
  public final static native int TranslationParentBindType_Always_get();
  public final static native int TranslationParentBindType_NotBind_FollowParent_get();
  public final static native int TranslationParentBindType_WhenCreating_FollowParent_get();
  public final static native int StandardColorParameterCore_Fixed_get();
  public final static native int StandardColorParameterCore_Random_get();
  public final static native int StandardColorParameterCore_Easing_get();
  public final static native int StandardColorParameterCore_FCurve_RGBA_get();
  public final static native int StandardColorParameterCore_Parameter_DWORD_get();
  public final static native void StandardColorParameterCore_type_set(long jarg1, StandardColorParameterCore jarg1_, int jarg2);
  public final static native int StandardColorParameterCore_type_get(long jarg1, StandardColorParameterCore jarg1_);
  public final static native long new_StandardColorParameterCore();
  public final static native void delete_StandardColorParameterCore(long jarg1);
  public final static native long StandardColorParameterCore_getFixed(long jarg1, StandardColorParameterCore jarg1_);
  public final static native void StandardColorParameterCore_setFixed(long jarg1, StandardColorParameterCore jarg1_, long jarg2, Color jarg2_);
  public final static native long StandardColorParameterCore_getRandom(long jarg1, StandardColorParameterCore jarg1_);
  public final static native void StandardColorParameterCore_setRandom(long jarg1, StandardColorParameterCore jarg1_, long jarg2, InternalStructRandomColor jarg2_);
  public final static native long StandardColorParameterCore_getEasing(long jarg1, StandardColorParameterCore jarg1_);
  public final static native void StandardColorParameterCore_setEasing(long jarg1, StandardColorParameterCore jarg1_, long jarg2, InternalStructEasingColor jarg2_);
  public final static native long StandardColorParameterCore_getFCurveRGBA(long jarg1, StandardColorParameterCore jarg1_);
  public final static native void StandardColorParameterCore_setFCurveRGBA(long jarg1, StandardColorParameterCore jarg1_, long jarg2, FCurveVectorColor jarg2_);
  public final static native void ParameterCommonValues_8_MaxGeneration_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_MaxGeneration_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_TranslationBindType_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_TranslationBindType_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_RotationBindType_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_RotationBindType_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_ScalingBindType_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_ScalingBindType_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_RemoveWhenLifeIsExtinct_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_RemoveWhenLifeIsExtinct_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_RemoveWhenParentIsRemoved_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_RemoveWhenParentIsRemoved_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_RemoveWhenChildrenIsExtinct_set(long jarg1, ParameterCommonValues_8 jarg1_, int jarg2);
  public final static native int ParameterCommonValues_8_RemoveWhenChildrenIsExtinct_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_life_set(long jarg1, ParameterCommonValues_8 jarg1_, long jarg2, InternalStructRandomInt jarg2_);
  public final static native long ParameterCommonValues_8_life_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_GenerationTime_set(long jarg1, ParameterCommonValues_8 jarg1_, float jarg2);
  public final static native float ParameterCommonValues_8_GenerationTime_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native void ParameterCommonValues_8_GenerationTimeOffset_set(long jarg1, ParameterCommonValues_8 jarg1_, float jarg2);
  public final static native float ParameterCommonValues_8_GenerationTimeOffset_get(long jarg1, ParameterCommonValues_8 jarg1_);
  public final static native long new_ParameterCommonValues_8();
  public final static native void delete_ParameterCommonValues_8(long jarg1);
  public final static native void ParameterCommonValues_RefEqMaxGeneration_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_RefEqMaxGeneration_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RefEqLife_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterCommonValues_RefEqLife_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RefEqGenerationTime_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterCommonValues_RefEqGenerationTime_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RefEqGenerationTimeOffset_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterCommonValues_RefEqGenerationTimeOffset_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_MaxGeneration_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_MaxGeneration_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_TranslationBindType_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_TranslationBindType_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RotationBindType_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_RotationBindType_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_ScalingBindType_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_ScalingBindType_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RemoveWhenLifeIsExtinct_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_RemoveWhenLifeIsExtinct_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RemoveWhenParentIsRemoved_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_RemoveWhenParentIsRemoved_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_RemoveWhenChildrenIsExtinct_set(long jarg1, ParameterCommonValues jarg1_, int jarg2);
  public final static native int ParameterCommonValues_RemoveWhenChildrenIsExtinct_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_life_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, InternalStructRandomInt jarg2_);
  public final static native long ParameterCommonValues_life_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_GenerationTime_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterCommonValues_GenerationTime_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native void ParameterCommonValues_GenerationTimeOffset_set(long jarg1, ParameterCommonValues jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterCommonValues_GenerationTimeOffset_get(long jarg1, ParameterCommonValues jarg1_);
  public final static native long new_ParameterCommonValues();
  public final static native void delete_ParameterCommonValues(long jarg1);
  public final static native void ParameterDepthValues_DepthOffset_set(long jarg1, ParameterDepthValues jarg1_, float jarg2);
  public final static native float ParameterDepthValues_DepthOffset_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_IsDepthOffsetScaledWithCamera_set(long jarg1, ParameterDepthValues jarg1_, boolean jarg2);
  public final static native boolean ParameterDepthValues_IsDepthOffsetScaledWithCamera_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_IsDepthOffsetScaledWithParticleScale_set(long jarg1, ParameterDepthValues jarg1_, boolean jarg2);
  public final static native boolean ParameterDepthValues_IsDepthOffsetScaledWithParticleScale_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_ZSort_set(long jarg1, ParameterDepthValues jarg1_, int jarg2);
  public final static native int ParameterDepthValues_ZSort_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_DrawingPriority_set(long jarg1, ParameterDepthValues jarg1_, int jarg2);
  public final static native int ParameterDepthValues_DrawingPriority_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_SoftParticle_set(long jarg1, ParameterDepthValues jarg1_, float jarg2);
  public final static native float ParameterDepthValues_SoftParticle_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native void ParameterDepthValues_DepthParameter_set(long jarg1, ParameterDepthValues jarg1_, long jarg2, NodeRendererDepthParameter jarg2_);
  public final static native long ParameterDepthValues_DepthParameter_get(long jarg1, ParameterDepthValues jarg1_);
  public final static native long new_ParameterDepthValues();
  public final static native void delete_ParameterDepthValues(long jarg1);
  public final static native void SteeringBehaviorParameter_MaxFollowSpeed_set(long jarg1, SteeringBehaviorParameter jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long SteeringBehaviorParameter_MaxFollowSpeed_get(long jarg1, SteeringBehaviorParameter jarg1_);
  public final static native void SteeringBehaviorParameter_SteeringSpeed_set(long jarg1, SteeringBehaviorParameter jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long SteeringBehaviorParameter_SteeringSpeed_get(long jarg1, SteeringBehaviorParameter jarg1_);
  public final static native long new_SteeringBehaviorParameter();
  public final static native void delete_SteeringBehaviorParameter(long jarg1);
  public final static native int ParameterTranslationType_Fixed_get();
  public final static native int ParameterTranslationType_PVA_get();
  public final static native int ParameterTranslationType_Easing_get();
  public final static native int ParameterTranslationType_FCurve_get();
  public final static native int ParameterTranslationType_NurbsCurve_get();
  public final static native int ParameterTranslationType_ViewOffset_get();
  public final static native int ParameterTranslationType_None_get();
  public final static native int ParameterTranslationType_DWORD_get();
  public final static native void ParameterTranslationFixed_RefEq_set(long jarg1, ParameterTranslationFixed jarg1_, int jarg2);
  public final static native int ParameterTranslationFixed_RefEq_get(long jarg1, ParameterTranslationFixed jarg1_);
  public final static native void ParameterTranslationFixed_Position_set(long jarg1, ParameterTranslationFixed jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long ParameterTranslationFixed_Position_get(long jarg1, ParameterTranslationFixed jarg1_);
  public final static native long new_ParameterTranslationFixed();
  public final static native void delete_ParameterTranslationFixed(long jarg1);
  public final static native void ParameterTranslationPVA_RefEqP_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterTranslationPVA_RefEqP_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native void ParameterTranslationPVA_RefEqV_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterTranslationPVA_RefEqV_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native void ParameterTranslationPVA_RefEqA_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterTranslationPVA_RefEqA_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native void ParameterTranslationPVA_location_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterTranslationPVA_location_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native void ParameterTranslationPVA_velocity_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterTranslationPVA_velocity_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native void ParameterTranslationPVA_acceleration_set(long jarg1, ParameterTranslationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterTranslationPVA_acceleration_get(long jarg1, ParameterTranslationPVA jarg1_);
  public final static native long new_ParameterTranslationPVA();
  public final static native void delete_ParameterTranslationPVA(long jarg1);
  public final static native void ParameterTranslationEasing_RefEqS_set(long jarg1, ParameterTranslationEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterTranslationEasing_RefEqS_get(long jarg1, ParameterTranslationEasing jarg1_);
  public final static native void ParameterTranslationEasing_RefEqE_set(long jarg1, ParameterTranslationEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterTranslationEasing_RefEqE_get(long jarg1, ParameterTranslationEasing jarg1_);
  public final static native void ParameterTranslationEasing_location_set(long jarg1, ParameterTranslationEasing jarg1_, long jarg2, InternalStructEasingVector3D jarg2_);
  public final static native long ParameterTranslationEasing_location_get(long jarg1, ParameterTranslationEasing jarg1_);
  public final static native long new_ParameterTranslationEasing();
  public final static native void delete_ParameterTranslationEasing(long jarg1);
  public final static native void ParameterTranslationNurbsCurve_Index_set(long jarg1, ParameterTranslationNurbsCurve jarg1_, int jarg2);
  public final static native int ParameterTranslationNurbsCurve_Index_get(long jarg1, ParameterTranslationNurbsCurve jarg1_);
  public final static native void ParameterTranslationNurbsCurve_Scale_set(long jarg1, ParameterTranslationNurbsCurve jarg1_, float jarg2);
  public final static native float ParameterTranslationNurbsCurve_Scale_get(long jarg1, ParameterTranslationNurbsCurve jarg1_);
  public final static native void ParameterTranslationNurbsCurve_MoveSpeed_set(long jarg1, ParameterTranslationNurbsCurve jarg1_, float jarg2);
  public final static native float ParameterTranslationNurbsCurve_MoveSpeed_get(long jarg1, ParameterTranslationNurbsCurve jarg1_);
  public final static native void ParameterTranslationNurbsCurve_LoopType_set(long jarg1, ParameterTranslationNurbsCurve jarg1_, int jarg2);
  public final static native int ParameterTranslationNurbsCurve_LoopType_get(long jarg1, ParameterTranslationNurbsCurve jarg1_);
  public final static native long new_ParameterTranslationNurbsCurve();
  public final static native void delete_ParameterTranslationNurbsCurve(long jarg1);
  public final static native void ParameterTranslationViewOffset_distance_set(long jarg1, ParameterTranslationViewOffset jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterTranslationViewOffset_distance_get(long jarg1, ParameterTranslationViewOffset jarg1_);
  public final static native long new_ParameterTranslationViewOffset();
  public final static native void delete_ParameterTranslationViewOffset(long jarg1);
  public final static native int LocationAbsType_None_get();
  public final static native int LocationAbsType_Gravity_get();
  public final static native int LocationAbsType_AttractiveForce_get();
  public final static native void LocationAbsParameter_type_set(long jarg1, LocationAbsParameter jarg1_, int jarg2);
  public final static native int LocationAbsParameter_type_get(long jarg1, LocationAbsParameter jarg1_);
  public final static native void LocationAbsParameter_gravity_set(long jarg1, LocationAbsParameter jarg1_, long jarg2, SIMDVec3f jarg2_);
  public final static native long LocationAbsParameter_gravity_get(long jarg1, LocationAbsParameter jarg1_);
  public final static native long new_LocationAbsParameter();
  public final static native void delete_LocationAbsParameter(long jarg1);
  public final static native int ParameterRotationType_Fixed_get();
  public final static native int ParameterRotationType_PVA_get();
  public final static native int ParameterRotationType_Easing_get();
  public final static native int ParameterRotationType_AxisPVA_get();
  public final static native int ParameterRotationType_AxisEasing_get();
  public final static native int ParameterRotationType_FCurve_get();
  public final static native int ParameterRotationType_None_get();
  public final static native int ParameterRotationType_DWORD_get();
  public final static native void ParameterRotationFixed_RefEq_set(long jarg1, ParameterRotationFixed jarg1_, int jarg2);
  public final static native int ParameterRotationFixed_RefEq_get(long jarg1, ParameterRotationFixed jarg1_);
  public final static native void ParameterRotationFixed_Position_set(long jarg1, ParameterRotationFixed jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long ParameterRotationFixed_Position_get(long jarg1, ParameterRotationFixed jarg1_);
  public final static native long new_ParameterRotationFixed();
  public final static native void delete_ParameterRotationFixed(long jarg1);
  public final static native void ParameterRotationPVA_RefEqP_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterRotationPVA_RefEqP_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native void ParameterRotationPVA_RefEqV_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterRotationPVA_RefEqV_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native void ParameterRotationPVA_RefEqA_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterRotationPVA_RefEqA_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native void ParameterRotationPVA_rotation_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterRotationPVA_rotation_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native void ParameterRotationPVA_velocity_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterRotationPVA_velocity_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native void ParameterRotationPVA_acceleration_set(long jarg1, ParameterRotationPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterRotationPVA_acceleration_get(long jarg1, ParameterRotationPVA jarg1_);
  public final static native long new_ParameterRotationPVA();
  public final static native void delete_ParameterRotationPVA(long jarg1);
  public final static native void ParameterRotationEasing_RefEqS_set(long jarg1, ParameterRotationEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterRotationEasing_RefEqS_get(long jarg1, ParameterRotationEasing jarg1_);
  public final static native void ParameterRotationEasing_RefEqE_set(long jarg1, ParameterRotationEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterRotationEasing_RefEqE_get(long jarg1, ParameterRotationEasing jarg1_);
  public final static native void ParameterRotationEasing_rotation_set(long jarg1, ParameterRotationEasing jarg1_, long jarg2, InternalStructEasingVector3D jarg2_);
  public final static native long ParameterRotationEasing_rotation_get(long jarg1, ParameterRotationEasing jarg1_);
  public final static native long new_ParameterRotationEasing();
  public final static native void delete_ParameterRotationEasing(long jarg1);
  public final static native void ParameterRotationAxisPVA_axis_set(long jarg1, ParameterRotationAxisPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterRotationAxisPVA_axis_get(long jarg1, ParameterRotationAxisPVA jarg1_);
  public final static native void ParameterRotationAxisPVA_rotation_set(long jarg1, ParameterRotationAxisPVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterRotationAxisPVA_rotation_get(long jarg1, ParameterRotationAxisPVA jarg1_);
  public final static native void ParameterRotationAxisPVA_velocity_set(long jarg1, ParameterRotationAxisPVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterRotationAxisPVA_velocity_get(long jarg1, ParameterRotationAxisPVA jarg1_);
  public final static native void ParameterRotationAxisPVA_acceleration_set(long jarg1, ParameterRotationAxisPVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterRotationAxisPVA_acceleration_get(long jarg1, ParameterRotationAxisPVA jarg1_);
  public final static native long new_ParameterRotationAxisPVA();
  public final static native void delete_ParameterRotationAxisPVA(long jarg1);
  public final static native void ParameterRotationAxisEasing_axis_set(long jarg1, ParameterRotationAxisEasing jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterRotationAxisEasing_axis_get(long jarg1, ParameterRotationAxisEasing jarg1_);
  public final static native void ParameterRotationAxisEasing_easing_set(long jarg1, ParameterRotationAxisEasing jarg1_, long jarg2, ParameterEasingFloat jarg2_);
  public final static native long ParameterRotationAxisEasing_easing_get(long jarg1, ParameterRotationAxisEasing jarg1_);
  public final static native long new_ParameterRotationAxisEasing();
  public final static native void delete_ParameterRotationAxisEasing(long jarg1);
  public final static native int ParameterScalingType_Fixed_get();
  public final static native int ParameterScalingType_PVA_get();
  public final static native int ParameterScalingType_Easing_get();
  public final static native int ParameterScalingType_SinglePVA_get();
  public final static native int ParameterScalingType_SingleEasing_get();
  public final static native int ParameterScalingType_FCurve_get();
  public final static native int ParameterScalingType_SingleFCurve_get();
  public final static native int ParameterScalingType_None_get();
  public final static native int ParameterScalingType_DWORD_get();
  public final static native void ParameterScalingFixed_RefEq_set(long jarg1, ParameterScalingFixed jarg1_, int jarg2);
  public final static native int ParameterScalingFixed_RefEq_get(long jarg1, ParameterScalingFixed jarg1_);
  public final static native void ParameterScalingFixed_Position_set(long jarg1, ParameterScalingFixed jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long ParameterScalingFixed_Position_get(long jarg1, ParameterScalingFixed jarg1_);
  public final static native long new_ParameterScalingFixed();
  public final static native void delete_ParameterScalingFixed(long jarg1);
  public final static native void ParameterScalingPVA_RefEqP_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterScalingPVA_RefEqP_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native void ParameterScalingPVA_RefEqV_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterScalingPVA_RefEqV_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native void ParameterScalingPVA_RefEqA_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterScalingPVA_RefEqA_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native void ParameterScalingPVA_Position_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterScalingPVA_Position_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native void ParameterScalingPVA_Velocity_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterScalingPVA_Velocity_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native void ParameterScalingPVA_Acceleration_set(long jarg1, ParameterScalingPVA jarg1_, long jarg2, InternalStructRandomVector3D jarg2_);
  public final static native long ParameterScalingPVA_Acceleration_get(long jarg1, ParameterScalingPVA jarg1_);
  public final static native long new_ParameterScalingPVA();
  public final static native void delete_ParameterScalingPVA(long jarg1);
  public final static native void ParameterScalingEasing_RefEqS_set(long jarg1, ParameterScalingEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterScalingEasing_RefEqS_get(long jarg1, ParameterScalingEasing jarg1_);
  public final static native void ParameterScalingEasing_RefEqE_set(long jarg1, ParameterScalingEasing jarg1_, long jarg2, RefMinMax jarg2_);
  public final static native long ParameterScalingEasing_RefEqE_get(long jarg1, ParameterScalingEasing jarg1_);
  public final static native void ParameterScalingEasing_Position_set(long jarg1, ParameterScalingEasing jarg1_, long jarg2, InternalStructEasingVector3D jarg2_);
  public final static native long ParameterScalingEasing_Position_get(long jarg1, ParameterScalingEasing jarg1_);
  public final static native long new_ParameterScalingEasing();
  public final static native void delete_ParameterScalingEasing(long jarg1);
  public final static native void ParameterScalingSinglePVA_Position_set(long jarg1, ParameterScalingSinglePVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterScalingSinglePVA_Position_get(long jarg1, ParameterScalingSinglePVA jarg1_);
  public final static native void ParameterScalingSinglePVA_Velocity_set(long jarg1, ParameterScalingSinglePVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterScalingSinglePVA_Velocity_get(long jarg1, ParameterScalingSinglePVA jarg1_);
  public final static native void ParameterScalingSinglePVA_Acceleration_set(long jarg1, ParameterScalingSinglePVA jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterScalingSinglePVA_Acceleration_get(long jarg1, ParameterScalingSinglePVA jarg1_);
  public final static native long new_ParameterScalingSinglePVA();
  public final static native void delete_ParameterScalingSinglePVA(long jarg1);
  public final static native void ParameterGenerationLocation_EffectsRotation_set(long jarg1, ParameterGenerationLocation jarg1_, int jarg2);
  public final static native int ParameterGenerationLocation_EffectsRotation_get(long jarg1, ParameterGenerationLocation jarg1_);
  public final static native int ParameterGenerationLocation_TYPE_POINT_get();
  public final static native int ParameterGenerationLocation_TYPE_SPHERE_get();
  public final static native int ParameterGenerationLocation_TYPE_MODEL_get();
  public final static native int ParameterGenerationLocation_TYPE_CIRCLE_get();
  public final static native int ParameterGenerationLocation_TYPE_LINE_get();
  public final static native int ParameterGenerationLocation_TYPE_DWORD_get();
  public final static native void ParameterGenerationLocation_type_set(long jarg1, ParameterGenerationLocation jarg1_, int jarg2);
  public final static native int ParameterGenerationLocation_type_get(long jarg1, ParameterGenerationLocation jarg1_);
  public final static native int ParameterGenerationLocation_MODELTYPE_RANDOM_get();
  public final static native int ParameterGenerationLocation_MODELTYPE_VERTEX_get();
  public final static native int ParameterGenerationLocation_MODELTYPE_VERTEX_RANDOM_get();
  public final static native int ParameterGenerationLocation_MODELTYPE_FACE_get();
  public final static native int ParameterGenerationLocation_MODELTYPE_FACE_RANDOM_get();
  public final static native int ParameterGenerationLocation_MODELTYPE_DWORD_get();
  public final static native int ParameterGenerationLocation_CIRCLE_TYPE_RANDOM_get();
  public final static native int ParameterGenerationLocation_CIRCLE_TYPE_ORDER_get();
  public final static native int ParameterGenerationLocation_CIRCLE_TYPE_REVERSE_ORDER_get();
  public final static native int ParameterGenerationLocation_LineType_Random_get();
  public final static native int ParameterGenerationLocation_LineType_Order_get();
  public final static native long new_ParameterGenerationLocation();
  public final static native void delete_ParameterGenerationLocation(long jarg1);
  public final static native int None_get();
  public final static native int Fixed2D_get();
  public final static native int Random2D_get();
  public final static native int Easing2D_get();
  public final static native int FCurve2D_get();
  public final static native int Fixed4D_get();
  public final static native int FCurveColor_get();
  public final static native int DynamicInput_get();
  public final static native void ParameterCustomDataFixed_Values_set(long jarg1, ParameterCustomDataFixed jarg1_, long jarg2, InternalStructVector2D jarg2_);
  public final static native long ParameterCustomDataFixed_Values_get(long jarg1, ParameterCustomDataFixed jarg1_);
  public final static native long new_ParameterCustomDataFixed();
  public final static native void delete_ParameterCustomDataFixed(long jarg1);
  public final static native void ParameterCustomDataRandom_Values_set(long jarg1, ParameterCustomDataRandom jarg1_, long jarg2, InternalStructRandomVector2D jarg2_);
  public final static native long ParameterCustomDataRandom_Values_get(long jarg1, ParameterCustomDataRandom jarg1_);
  public final static native long new_ParameterCustomDataRandom();
  public final static native void delete_ParameterCustomDataRandom(long jarg1);
  public final static native void ParameterCustomDataEasing_Values_set(long jarg1, ParameterCustomDataEasing jarg1_, long jarg2, InternalStructEasingVector2D jarg2_);
  public final static native long ParameterCustomDataEasing_Values_get(long jarg1, ParameterCustomDataEasing jarg1_);
  public final static native long new_ParameterCustomDataEasing();
  public final static native void delete_ParameterCustomDataEasing(long jarg1);
  public final static native void ParameterCustomDataFCurve_Values_set(long jarg1, ParameterCustomDataFCurve jarg1_, long jarg2, FCurveVector2D jarg2_);
  public final static native long ParameterCustomDataFCurve_Values_get(long jarg1, ParameterCustomDataFCurve jarg1_);
  public final static native long new_ParameterCustomDataFCurve();
  public final static native void delete_ParameterCustomDataFCurve(long jarg1);
  public final static native void ParameterCustomDataFCurveColor_Values_set(long jarg1, ParameterCustomDataFCurveColor jarg1_, long jarg2, FCurveVectorColor jarg2_);
  public final static native long ParameterCustomDataFCurveColor_Values_get(long jarg1, ParameterCustomDataFCurveColor jarg1_);
  public final static native long new_ParameterCustomDataFCurveColor();
  public final static native void delete_ParameterCustomDataFCurveColor(long jarg1);
  public final static native void ParameterCustomData_Type_set(long jarg1, ParameterCustomData jarg1_, int jarg2);
  public final static native int ParameterCustomData_Type_get(long jarg1, ParameterCustomData jarg1_);
  public final static native void ParameterCustomData_Fixed_set(long jarg1, ParameterCustomData jarg1_, long jarg2, ParameterCustomDataFixed jarg2_);
  public final static native long ParameterCustomData_Fixed_get(long jarg1, ParameterCustomData jarg1_);
  public final static native void ParameterCustomData_Random_set(long jarg1, ParameterCustomData jarg1_, long jarg2, ParameterCustomDataRandom jarg2_);
  public final static native long ParameterCustomData_Random_get(long jarg1, ParameterCustomData jarg1_);
  public final static native void ParameterCustomData_Easing_set(long jarg1, ParameterCustomData jarg1_, long jarg2, ParameterCustomDataEasing jarg2_);
  public final static native long ParameterCustomData_Easing_get(long jarg1, ParameterCustomData jarg1_);
  public final static native void ParameterCustomData_FCurve_set(long jarg1, ParameterCustomData jarg1_, long jarg2, ParameterCustomDataFCurve jarg2_);
  public final static native long ParameterCustomData_FCurve_get(long jarg1, ParameterCustomData jarg1_);
  public final static native void ParameterCustomData_FCurveColor_set(long jarg1, ParameterCustomData jarg1_, long jarg2, ParameterCustomDataFCurveColor jarg2_);
  public final static native long ParameterCustomData_FCurveColor_get(long jarg1, ParameterCustomData jarg1_);
  public final static native long new_ParameterCustomData();
  public final static native void delete_ParameterCustomData(long jarg1);
  public final static native int ParameterRendererCommon_UVParameterNum_get();
  public final static native void ParameterRendererCommon_MaterialType_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_MaterialType_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_ColorTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_ColorTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_Texture2Index_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_Texture2Index_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_AlphaTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_AlphaTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_UVDistortionTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_UVDistortionTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_BlendTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_BlendTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_BlendAlphaTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_BlendAlphaTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_BlendUVDistortionTextureIndex_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_BlendUVDistortionTextureIndex_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_MaterialData_set(long jarg1, ParameterRendererCommon jarg1_, long jarg2, MaterialRenderData jarg2_);
  public final static native long ParameterRendererCommon_MaterialData_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_AlphaBlend_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_AlphaBlend_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_UVDistortionIntensity_set(long jarg1, ParameterRendererCommon jarg1_, float jarg2);
  public final static native float ParameterRendererCommon_UVDistortionIntensity_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_TextureBlendType_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_TextureBlendType_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_BlendUVDistortionIntensity_set(long jarg1, ParameterRendererCommon jarg1_, float jarg2);
  public final static native float ParameterRendererCommon_BlendUVDistortionIntensity_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_EmissiveScaling_set(long jarg1, ParameterRendererCommon jarg1_, float jarg2);
  public final static native float ParameterRendererCommon_EmissiveScaling_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_ZWrite_set(long jarg1, ParameterRendererCommon jarg1_, boolean jarg2);
  public final static native boolean ParameterRendererCommon_ZWrite_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_ZTest_set(long jarg1, ParameterRendererCommon jarg1_, boolean jarg2);
  public final static native boolean ParameterRendererCommon_ZTest_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_Distortion_set(long jarg1, ParameterRendererCommon jarg1_, boolean jarg2);
  public final static native boolean ParameterRendererCommon_Distortion_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_DistortionIntensity_set(long jarg1, ParameterRendererCommon jarg1_, float jarg2);
  public final static native float ParameterRendererCommon_DistortionIntensity_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_ColorBindType_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_ColorBindType_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_BasicParameter_set(long jarg1, ParameterRendererCommon jarg1_, long jarg2, NodeRendererBasicParameter jarg2_);
  public final static native long ParameterRendererCommon_BasicParameter_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_CustomData1_set(long jarg1, ParameterRendererCommon jarg1_, long jarg2, ParameterCustomData jarg2_);
  public final static native long ParameterRendererCommon_CustomData1_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native void ParameterRendererCommon_CustomData2_set(long jarg1, ParameterRendererCommon jarg1_, long jarg2, ParameterCustomData jarg2_);
  public final static native long ParameterRendererCommon_CustomData2_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native int ParameterRendererCommon_FADEIN_ON_get();
  public final static native int ParameterRendererCommon_FADEIN_OFF_get();
  public final static native int ParameterRendererCommon_FADEIN_DWORD_get();
  public final static native void ParameterRendererCommon_FadeInType_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_FadeInType_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native int ParameterRendererCommon_FADEOUT_ON_get();
  public final static native int ParameterRendererCommon_FADEOUT_OFF_get();
  public final static native int ParameterRendererCommon_FADEOUT_DWORD_get();
  public final static native void ParameterRendererCommon_FadeOutType_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_FadeOutType_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native int ParameterRendererCommon_UV_DEFAULT_get();
  public final static native int ParameterRendererCommon_UV_FIXED_get();
  public final static native int ParameterRendererCommon_UV_ANIMATION_get();
  public final static native int ParameterRendererCommon_UV_SCROLL_get();
  public final static native int ParameterRendererCommon_UV_FCURVE_get();
  public final static native int ParameterRendererCommon_UV_DWORD_get();
  public final static native void ParameterRendererCommon_UVTypes_set(long jarg1, ParameterRendererCommon jarg1_, int jarg2);
  public final static native int ParameterRendererCommon_UVTypes_get(long jarg1, ParameterRendererCommon jarg1_);
  public final static native long new_ParameterRendererCommon();
  public final static native void delete_ParameterRendererCommon(long jarg1);
  public final static native int ParameterAlphaCutoff_FPI_get();
  public final static native void ParameterAlphaCutoff_Type_set(long jarg1, ParameterAlphaCutoff jarg1_, int jarg2);
  public final static native int ParameterAlphaCutoff_Type_get(long jarg1, ParameterAlphaCutoff jarg1_);
  public final static native void ParameterAlphaCutoff_Easing_set(long jarg1, ParameterAlphaCutoff jarg1_, long jarg2, ParameterEasingFloat jarg2_);
  public final static native long ParameterAlphaCutoff_Easing_get(long jarg1, ParameterAlphaCutoff jarg1_);
  public final static native void ParameterAlphaCutoff_EdgeThreshold_set(long jarg1, ParameterAlphaCutoff jarg1_, float jarg2);
  public final static native float ParameterAlphaCutoff_EdgeThreshold_get(long jarg1, ParameterAlphaCutoff jarg1_);
  public final static native void ParameterAlphaCutoff_EdgeColor_set(long jarg1, ParameterAlphaCutoff jarg1_, long jarg2, Color jarg2_);
  public final static native long ParameterAlphaCutoff_EdgeColor_get(long jarg1, ParameterAlphaCutoff jarg1_);
  public final static native void ParameterAlphaCutoff_EdgeColorScaling_set(long jarg1, ParameterAlphaCutoff jarg1_, float jarg2);
  public final static native float ParameterAlphaCutoff_EdgeColorScaling_get(long jarg1, ParameterAlphaCutoff jarg1_);
  public final static native long new_ParameterAlphaCutoff();
  public final static native void delete_ParameterAlphaCutoff(long jarg1);
  public final static native int ParameterSoundType_None_get();
  public final static native int ParameterSoundType_Use_get();
  public final static native int ParameterSoundType_DWORD_get();
  public final static native int ParameterSoundPanType_2D_get();
  public final static native int ParameterSoundPanType_3D_get();
  public final static native int ParameterSoundPanType_DWORD_get();
  public final static native void ParameterSound_WaveId_set(long jarg1, ParameterSound jarg1_, int jarg2);
  public final static native int ParameterSound_WaveId_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_Volume_set(long jarg1, ParameterSound jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterSound_Volume_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_Pitch_set(long jarg1, ParameterSound jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterSound_Pitch_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_PanType_set(long jarg1, ParameterSound jarg1_, int jarg2);
  public final static native int ParameterSound_PanType_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_Pan_set(long jarg1, ParameterSound jarg1_, long jarg2, InternalStructRandomFloat jarg2_);
  public final static native long ParameterSound_Pan_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_Distance_set(long jarg1, ParameterSound jarg1_, float jarg2);
  public final static native float ParameterSound_Distance_get(long jarg1, ParameterSound jarg1_);
  public final static native void ParameterSound_Delay_set(long jarg1, ParameterSound jarg1_, long jarg2, InternalStructRandomInt jarg2_);
  public final static native long ParameterSound_Delay_get(long jarg1, ParameterSound jarg1_);
  public final static native long new_ParameterSound();
  public final static native void delete_ParameterSound(long jarg1);
  public final static native long new_DynamicFactorParameter();
  public final static native void delete_DynamicFactorParameter(long jarg1);
  public final static native int RenderingOrder_FirstCreatedInstanceIsFirst_get();
  public final static native int RenderingOrder_FirstCreatedInstanceIsLast_get();
  public final static native int RenderingOrder_DWORD_get();
  public final static native void EffectNodeImplemented_IsRendered_set(long jarg1, EffectNodeImplemented jarg1_, boolean jarg2);
  public final static native boolean EffectNodeImplemented_IsRendered_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_CommonValues_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterCommonValues jarg2_);
  public final static native long EffectNodeImplemented_CommonValues_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_SteeringBehaviorParam_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, SteeringBehaviorParameter jarg2_);
  public final static native long EffectNodeImplemented_SteeringBehaviorParam_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationType_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_TranslationType_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationFixed_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterTranslationFixed jarg2_);
  public final static native long EffectNodeImplemented_TranslationFixed_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationPVA_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterTranslationPVA jarg2_);
  public final static native long EffectNodeImplemented_TranslationPVA_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationEasing_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterEasingSIMDVec3 jarg2_);
  public final static native long EffectNodeImplemented_TranslationEasing_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationFCurve_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, FCurveVector3D jarg2_);
  public final static native long EffectNodeImplemented_TranslationFCurve_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationNurbsCurve_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterTranslationNurbsCurve jarg2_);
  public final static native long EffectNodeImplemented_TranslationNurbsCurve_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_TranslationViewOffset_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterTranslationViewOffset jarg2_);
  public final static native long EffectNodeImplemented_TranslationViewOffset_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationType_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_RotationType_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationFixed_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterRotationFixed jarg2_);
  public final static native long EffectNodeImplemented_RotationFixed_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationPVA_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterRotationPVA jarg2_);
  public final static native long EffectNodeImplemented_RotationPVA_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationEasing_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterEasingSIMDVec3 jarg2_);
  public final static native long EffectNodeImplemented_RotationEasing_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationFCurve_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, FCurveVector3D jarg2_);
  public final static native long EffectNodeImplemented_RotationFCurve_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationAxisPVA_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterRotationAxisPVA jarg2_);
  public final static native long EffectNodeImplemented_RotationAxisPVA_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RotationAxisEasing_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterRotationAxisEasing jarg2_);
  public final static native long EffectNodeImplemented_RotationAxisEasing_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingType_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_ScalingType_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingFixed_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterScalingFixed jarg2_);
  public final static native long EffectNodeImplemented_ScalingFixed_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingPVA_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterScalingPVA jarg2_);
  public final static native long EffectNodeImplemented_ScalingPVA_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingEasing_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterEasingSIMDVec3 jarg2_);
  public final static native long EffectNodeImplemented_ScalingEasing_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingSinglePVA_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterScalingSinglePVA jarg2_);
  public final static native long EffectNodeImplemented_ScalingSinglePVA_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingSingleEasing_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterEasingFloat jarg2_);
  public final static native long EffectNodeImplemented_ScalingSingleEasing_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingFCurve_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, FCurveVector3D jarg2_);
  public final static native long EffectNodeImplemented_ScalingFCurve_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_ScalingSingleFCurve_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, FCurveScalar jarg2_);
  public final static native long EffectNodeImplemented_ScalingSingleFCurve_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_GenerationLocation_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterGenerationLocation jarg2_);
  public final static native long EffectNodeImplemented_GenerationLocation_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_DepthValues_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterDepthValues jarg2_);
  public final static native long EffectNodeImplemented_DepthValues_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RendererCommon_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterRendererCommon jarg2_);
  public final static native long EffectNodeImplemented_RendererCommon_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_AlphaCutoff_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterAlphaCutoff jarg2_);
  public final static native long EffectNodeImplemented_AlphaCutoff_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_EnableFalloff_set(long jarg1, EffectNodeImplemented jarg1_, boolean jarg2);
  public final static native boolean EffectNodeImplemented_EnableFalloff_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_FalloffParam_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, FalloffParameter jarg2_);
  public final static native long EffectNodeImplemented_FalloffParam_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_SoundType_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_SoundType_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_Sound_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, ParameterSound jarg2_);
  public final static native long EffectNodeImplemented_Sound_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RenderingOrder_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_RenderingOrder_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_RenderingPriority_set(long jarg1, EffectNodeImplemented jarg1_, int jarg2);
  public final static native int EffectNodeImplemented_RenderingPriority_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native void EffectNodeImplemented_DynamicFactor_set(long jarg1, EffectNodeImplemented jarg1_, long jarg2, DynamicFactorParameter jarg2_);
  public final static native long EffectNodeImplemented_DynamicFactor_get(long jarg1, EffectNodeImplemented jarg1_);
  public final static native int EffectNodeImplemented_getType(long jarg1, EffectNodeImplemented jarg1_);
  public final static native long new_EffectNodeRoot(long jarg1, EffekseerEffect jarg1_, long jarg2);
  public final static native void delete_EffectNodeRoot(long jarg1);
  public final static native int SpriteColorParameterCore_Default_get();
  public final static native int SpriteColorParameterCore_Fixed_get();
  public final static native int SpriteColorParameterCore_Parameter_DWORD_get();
  public final static native void SpriteColorParameterCore_type_set(long jarg1, SpriteColorParameterCore jarg1_, int jarg2);
  public final static native int SpriteColorParameterCore_type_get(long jarg1, SpriteColorParameterCore jarg1_);
  public final static native long SpriteColorParameterCore_getFixedLowerLeftColor(long jarg1, SpriteColorParameterCore jarg1_);
  public final static native void SpriteColorParameterCore_setFixedLowerLeftColor(long jarg1, SpriteColorParameterCore jarg1_, long jarg2, Color jarg2_);
  public final static native long SpriteColorParameterCore_getFixedLowerRightColor(long jarg1, SpriteColorParameterCore jarg1_);
  public final static native void SpriteColorParameterCore_setFixedLowerRightColor(long jarg1, SpriteColorParameterCore jarg1_, long jarg2, Color jarg2_);
  public final static native long SpriteColorParameterCore_getFixedUpperLeftColor(long jarg1, SpriteColorParameterCore jarg1_);
  public final static native void SpriteColorParameterCore_setFixedUpperLeftColor(long jarg1, SpriteColorParameterCore jarg1_, long jarg2, Color jarg2_);
  public final static native long SpriteColorParameterCore_getFixedUpperRightColor(long jarg1, SpriteColorParameterCore jarg1_);
  public final static native void SpriteColorParameterCore_setFixedUpperRightColor(long jarg1, SpriteColorParameterCore jarg1_, long jarg2, Color jarg2_);
  public final static native long new_SpriteColorParameterCore();
  public final static native void delete_SpriteColorParameterCore(long jarg1);
  public final static native int SpritePositionParameterCore_Default_get();
  public final static native int SpritePositionParameterCore_Fixed_get();
  public final static native int SpritePositionParameterCore_Parameter_DWORD_get();
  public final static native void SpritePositionParameterCore_type_set(long jarg1, SpritePositionParameterCore jarg1_, int jarg2);
  public final static native int SpritePositionParameterCore_type_get(long jarg1, SpritePositionParameterCore jarg1_);
  public final static native long SpritePositionParameterCore_getFixedLowerLeftPos(long jarg1, SpritePositionParameterCore jarg1_);
  public final static native void SpritePositionParameterCore_setFixedLowerLeftPos(long jarg1, SpritePositionParameterCore jarg1_, long jarg2, SIMDVec2f jarg2_);
  public final static native long SpritePositionParameterCore_getFixedLowerRightPos(long jarg1, SpritePositionParameterCore jarg1_);
  public final static native void SpritePositionParameterCore_setFixedLowerRightPos(long jarg1, SpritePositionParameterCore jarg1_, long jarg2, SIMDVec2f jarg2_);
  public final static native long SpritePositionParameterCore_getFixedUpperLeftPos(long jarg1, SpritePositionParameterCore jarg1_);
  public final static native void SpritePositionParameterCore_setFixedUpperLeftPos(long jarg1, SpritePositionParameterCore jarg1_, long jarg2, SIMDVec2f jarg2_);
  public final static native long SpritePositionParameterCore_getFixedUpperRightPos(long jarg1, SpritePositionParameterCore jarg1_);
  public final static native void SpritePositionParameterCore_setFixedUpperRightPos(long jarg1, SpritePositionParameterCore jarg1_, long jarg2, SIMDVec2f jarg2_);
  public final static native long new_SpritePositionParameterCore();
  public final static native void delete_SpritePositionParameterCore(long jarg1);
  public final static native void EffectNodeSprite_AlphaBlend_set(long jarg1, EffectNodeSprite jarg1_, int jarg2);
  public final static native int EffectNodeSprite_AlphaBlend_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native void EffectNodeSprite_Billboard_set(long jarg1, EffectNodeSprite jarg1_, int jarg2);
  public final static native int EffectNodeSprite_Billboard_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native void EffectNodeSprite_SpriteAllColor_set(long jarg1, EffectNodeSprite jarg1_, long jarg2, StandardColorParameterCore jarg2_);
  public final static native long EffectNodeSprite_SpriteAllColor_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native void EffectNodeSprite_SpriteColor_set(long jarg1, EffectNodeSprite jarg1_, long jarg2, SpriteColorParameterCore jarg2_);
  public final static native long EffectNodeSprite_SpriteColor_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native void EffectNodeSprite_SpritePosition_set(long jarg1, EffectNodeSprite jarg1_, long jarg2, SpritePositionParameterCore jarg2_);
  public final static native long EffectNodeSprite_SpritePosition_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native void EffectNodeSprite_SpriteTexture_set(long jarg1, EffectNodeSprite jarg1_, int jarg2);
  public final static native int EffectNodeSprite_SpriteTexture_get(long jarg1, EffectNodeSprite jarg1_);
  public final static native long new_EffectNodeSprite(long jarg1, EffekseerEffect jarg1_, long jarg2);
  public final static native void delete_EffectNodeSprite(long jarg1);
  public final static native void EffekseerManagerParameters_UpdateParameter_DeltaFrame_set(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_, float jarg2);
  public final static native float EffekseerManagerParameters_UpdateParameter_DeltaFrame_get(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_);
  public final static native void EffekseerManagerParameters_UpdateParameter_UpdateInterval_set(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_, float jarg2);
  public final static native float EffekseerManagerParameters_UpdateParameter_UpdateInterval_get(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_);
  public final static native void EffekseerManagerParameters_UpdateParameter_SyncUpdate_set(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_, boolean jarg2);
  public final static native boolean EffekseerManagerParameters_UpdateParameter_SyncUpdate_get(long jarg1, EffekseerManagerParameters.UpdateParameter jarg1_);
  public final static native long new_EffekseerManagerParameters_UpdateParameter();
  public final static native void delete_EffekseerManagerParameters_UpdateParameter(long jarg1);
  public final static native void EffekseerManagerParameters_DrawParameter_CameraPosition_set(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long EffekseerManagerParameters_DrawParameter_CameraPosition_get(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_);
  public final static native void EffekseerManagerParameters_DrawParameter_CameraFrontDirection_set(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_, long jarg2, Vector3D jarg2_);
  public final static native long EffekseerManagerParameters_DrawParameter_CameraFrontDirection_get(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_);
  public final static native void EffekseerManagerParameters_DrawParameter_CameraCullingMask_set(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_, int jarg2);
  public final static native int EffekseerManagerParameters_DrawParameter_CameraCullingMask_get(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_);
  public final static native void EffekseerManagerParameters_DrawParameter_IsSortingEffectsEnabled_set(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_, boolean jarg2);
  public final static native boolean EffekseerManagerParameters_DrawParameter_IsSortingEffectsEnabled_get(long jarg1, EffekseerManagerParameters.DrawParameter jarg1_);
  public final static native long new_EffekseerManagerParameters_DrawParameter();
  public final static native void delete_EffekseerManagerParameters_DrawParameter(long jarg1);
  public final static native long EffectNodeImplemented_SWIGUpcast(long jarg1);
  public final static native long EffectNodeRoot_SWIGUpcast(long jarg1);
  public final static native long EffectNodeSprite_SWIGUpcast(long jarg1);
}
