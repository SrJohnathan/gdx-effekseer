/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.srjohnathan.gdx.effekseer.core;

public class SpritePositionParameterCore {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected SpritePositionParameterCore(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SpritePositionParameterCore obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GDXJNI.delete_SpritePositionParameterCore(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setType(int value) {
    GDXJNI.SpritePositionParameterCore_type_set(swigCPtr, this, value);
  }

  public int getType() {
    return GDXJNI.SpritePositionParameterCore_type_get(swigCPtr, this);
  }

  public SIMDVec2f getFixedLowerLeftPos() {
    return new SIMDVec2f(GDXJNI.SpritePositionParameterCore_getFixedLowerLeftPos(swigCPtr, this), true);
  }

  public void setFixedLowerLeftPos(SIMDVec2f value) {
    GDXJNI.SpritePositionParameterCore_setFixedLowerLeftPos(swigCPtr, this, SIMDVec2f.getCPtr(value), value);
  }

  public SIMDVec2f getFixedLowerRightPos() {
    return new SIMDVec2f(GDXJNI.SpritePositionParameterCore_getFixedLowerRightPos(swigCPtr, this), true);
  }

  public void setFixedLowerRightPos(SIMDVec2f value) {
    GDXJNI.SpritePositionParameterCore_setFixedLowerRightPos(swigCPtr, this, SIMDVec2f.getCPtr(value), value);
  }

  public SIMDVec2f getFixedUpperLeftPos() {
    return new SIMDVec2f(GDXJNI.SpritePositionParameterCore_getFixedUpperLeftPos(swigCPtr, this), true);
  }

  public void setFixedUpperLeftPos(SIMDVec2f value) {
    GDXJNI.SpritePositionParameterCore_setFixedUpperLeftPos(swigCPtr, this, SIMDVec2f.getCPtr(value), value);
  }

  public SIMDVec2f getFixedUpperRightPos() {
    return new SIMDVec2f(GDXJNI.SpritePositionParameterCore_getFixedUpperRightPos(swigCPtr, this), true);
  }

  public void setFixedUpperRightPos(SIMDVec2f value) {
    GDXJNI.SpritePositionParameterCore_setFixedUpperRightPos(swigCPtr, this, SIMDVec2f.getCPtr(value), value);
  }

  public SpritePositionParameterCore() {
    this(GDXJNI.new_SpritePositionParameterCore(), true);
  }

  public final static int Default = GDXJNI.SpritePositionParameterCore_Default_get();
  public final static int Fixed = GDXJNI.SpritePositionParameterCore_Fixed_get();
  public final static int Parameter_DWORD = GDXJNI.SpritePositionParameterCore_Parameter_DWORD_get();

}
